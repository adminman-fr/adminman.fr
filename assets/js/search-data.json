{"0": {
    "doc": "Installer-neofetch",
    "title": "  1.Debian",
    "content": "1) Mettre à jour les depot . sudo apt-get update . 2) Installez le paquet neofetch . sudo apt-get install neofetch . ",
    "url": "/Medaey/Installer-neofetch#-1debian",
    
    "relUrl": "/Medaey/Installer-neofetch#-1debian"
  },"1": {
    "doc": "Installer-neofetch",
    "title": "2.Archlinux",
    "content": "1*) Installez le paquet via pacman . pacman -S neofetch . Information: neofetch est personnalisable, pour cela modifier le fichier “config.conf” . nano ~/.config/neofetch/config* . github.com . ",
    "url": "/Medaey/Installer-neofetch#2archlinux",
    
    "relUrl": "/Medaey/Installer-neofetch#2archlinux"
  },"2": {
    "doc": "Installer-neofetch",
    "title": "Installer-neofetch",
    "content": "Neofetch est un outils d’information système multiplateforme en ligne de commande, il recueille les informations de votre système et les affiche sur le terminal. ",
    "url": "/Medaey/Installer-neofetch",
    
    "relUrl": "/Medaey/Installer-neofetch"
  },"3": {
    "doc": "Installer-un-serveur-Teamspeak3-sous-linux",
    "title": "Comment démarrer/arrêter le Teamspeak",
    "content": "| Pour accéder a ces fonctionnalité exécuter le script ts3server_startscript.sh suivie d’une option {start | stop | restart | status} | . Par exemple: ./ts3server_startscript.sh stop . C’est fini pour aujourd’hui ! Nous verrons dans un prochain article comment augmenter la capacité des slots via une demande de licence à but non lucratif de votre serveur et comment automatiser l’installation avec linuxgsm. hawkcreation.com . ",
    "url": "/Medaey/Installer-un-serveur-Teamspeak3-sous-linux#comment-d%C3%A9marrerarr%C3%AAter-le-teamspeak",
    
    "relUrl": "/Medaey/Installer-un-serveur-Teamspeak3-sous-linux#comment-démarrerarrêter-le-teamspeak"
  },"4": {
    "doc": "Installer-un-serveur-Teamspeak3-sous-linux",
    "title": "Installer-un-serveur-Teamspeak3-sous-linux",
    "content": "Nous allons voir dans cet article comment installer un serveur Teamspeak 3 Sous linux. 1) Mettre à jour votre serveur . sudo apt-get update &amp;&amp; sudo apt-get upgrade -y . 2) Ouvrir les ports du par feu . ufw allow 9987/udp &amp;&amp; ufw allow 30033/tcp . Note : Listes &amp; utilité des ports . port 9987 (UDP) = Vocale . port 30033(TCP) = Trasfert de fichiers . port 10011(TCP) = ServerQuery . 2) Création d’un utilisateur ts3server . sudo adduser ts3server  . 3) Définir le mot de passe de l’utilisateur ts3server . passwd ts3server . 4) Devenir l’utilisateur ts3server . su ts3server . 5) Télécharger la dernière version de Teamspeak3 serveur (Site officier de TeamSpeak) . wget https://files.teamspeak-services.com/releases/server/3.8.0/teamspeak3-server_linux_amd64-3.8.0.tar.bz2 . 6) Décompresser l’archive tar.bz2 . tar -xvf teamspeak3-server_linux_amd64-*.tar.bz2 . 8) Rentrer dans le dossier teamspeak3-server_linux_amd64 . cd teamspeak3-server_linux_amd64 . 7) Démarrer le serveur Teamspeak (Lors du premier démarrage du serveur vous allez avoir un mot de passe qui va être généré. Pensez à noter ce mot de passe car sinon vous ne pourrez plus administré votre serveur.) ./ts3server_startscript.sh start . -—————————————————————– I M P O R T A N T—————————————————————— Server Query Admin Account created loginname= “serveradmin”, password= “xxxxxxxx”———————————————————————————————————————————— I M P O R T A N T—————————————————————— ServerAdmin privilege key created, please use it to gain serveradmin rights for your virtualserver. please also check the doc/privilegekey_guide.txt for details. token=uKAu0N+RE8kRIAv9oa4twJgKjHRmyb4ehJtuH7fS—————————————————————— . 8) Utiliser le token pour devenir administrateur . ",
    "url": "/Medaey/Installer-un-serveur-Teamspeak3-sous-linux",
    
    "relUrl": "/Medaey/Installer-un-serveur-Teamspeak3-sous-linux"
  },"5": {
    "doc": "Ip-fixe-ou-ip-dynamique-avec-l'invitation-de-commande-windows",
    "title": "Ip-fixe-ou-ip-dynamique-avec-l'invitation-de-commande-windows",
    "content": "1) Ouvrir une invitation de commandes en tant qu’administrateur: . 2) Lister les interfaces réseau: . netsh int show int . Normalement l’interface réseau utilisée par défaut se nomme “Connexion au réseau local”. Pour avoir plus de détails sur vos interfaces réseau: . netsh interface ip show config . 3) Passer l’interface réseau en DHCP: . netsh int ip set address “Connexion au réseau local” dhcp . Remplacer “Connexion au réseau local” par le nom de votre la carte réseau. microsoft.com . ",
    "url": "/Medaey/Ip-fixe-ou-ip-dynamique-avec-l'invitation-de-commande-windows",
    
    "relUrl": "/Medaey/Ip-fixe-ou-ip-dynamique-avec-l'invitation-de-commande-windows"
  },"6": {
    "doc": "a-detailed-guide-to-directory-listing-in-red-hat-centos",
    "title": "Listing Directories with LS",
    "content": "The ls command is a fundamental tool for listing directory contents. Here is the basic usage: . ls . The ls command has many options that modify its output. For instance, to see detailed information about files and directories, use the -l (long format) option: . ls -l . ",
    "url": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#listing-directories-with-ls",
    
    "relUrl": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#listing-directories-with-ls"
  },"7": {
    "doc": "a-detailed-guide-to-directory-listing-in-red-hat-centos",
    "title": "Viewing Directory Structures with Tree",
    "content": "While tree isn’t included by default in minimal RHEL installations, it’s a handy tool to visualize directory structures. It shows the hierarchical structure of directories. tree . If tree is not available on your system, you can get similar functionality with ls: . ls -R . ",
    "url": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#viewing-directory-structures-with-tree",
    
    "relUrl": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#viewing-directory-structures-with-tree"
  },"8": {
    "doc": "a-detailed-guide-to-directory-listing-in-red-hat-centos",
    "title": "Checking Last Modification Dates with LS",
    "content": "The -l option with the ls command not only provides detailed file information but also shows the last modification date and time: . ls -l . ",
    "url": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#checking-last-modification-dates-with-ls",
    
    "relUrl": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#checking-last-modification-dates-with-ls"
  },"9": {
    "doc": "a-detailed-guide-to-directory-listing-in-red-hat-centos",
    "title": "Listing Files Based on Time with LS",
    "content": "The ls command also has options to sort files based on time. The -t option sorts files based on modification time, with newest files listed first: . ls -lt . To reverse the order (oldest files first), you can add the -r option: . ls -ltr . The -u option with -lt will sort files based on access time (i.e., when the file was last read): . ls -lut . Or, to sort by change time (i.e., the time when the file’s metadata was last changed), use -lc: . ls -ltc . ",
    "url": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#listing-files-based-on-time-with-ls",
    
    "relUrl": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#listing-files-based-on-time-with-ls"
  },"10": {
    "doc": "a-detailed-guide-to-directory-listing-in-red-hat-centos",
    "title": "Conclusion",
    "content": "Mastering these commands is key to efficiently working with directories in RHEL. With these commands at your disposal, you’ll be able to swiftly navigate your file system and understand the state of your files. Remember, the man command is your friend - use it (e.g., man ls) to get more detailed information on these commands. Happy exploring! . ",
    "url": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#conclusion",
    
    "relUrl": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos#conclusion"
  },"11": {
    "doc": "a-detailed-guide-to-directory-listing-in-red-hat-centos",
    "title": "a-detailed-guide-to-directory-listing-in-red-hat-centos",
    "content": "Listing directories is one of the most common tasks when working with a Linux system like Red Hat Enterprise Linux (RHEL). In this article, we’ll explore a variety of commands related to listing directories, looking at their structure, and checking file modification dates. ",
    "url": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos",
    
    "relUrl": "/Lucian/a-detailed-guide-to-directory-listing-in-red-hat-centos"
  },"12": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "Slackware: The Patriarch of Linux Distributions (1993)",
    "content": "Slackware, started by Patrick Volkerding, is known for its simplicity and the fact that it’s one of the most Unix-like Linux distributions out there. Its philosophy is all about stability, simplicity, and most importantly, the freedom to tweak the system to your heart’s content. # Install a package installpkg package_name.tgz # Remove a package removepkg package_name # Upgrade a package upgradepkg package_name.tgz . ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#slackware-the-patriarch-of-linux-distributions-1993",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#slackware-the-patriarch-of-linux-distributions-1993"
  },"13": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "Debian: The Universal Operating System (1993)",
    "content": "Debian, started by Ian Murdock, aims to be the universal operating system. Known for its robustness and richness in package quantity, Debian has spawned a lot of notable distributions such as Ubuntu and Linux Mint. # Update package list sudo apt-get update # Upgrade packages sudo apt-get upgrade # Install a package sudo apt-get install package_name # Remove a package sudo apt-get remove package_name . ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#debian-the-universal-operating-system-1993",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#debian-the-universal-operating-system-1993"
  },"14": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "Red Hat Linux/Fedora: The Mother of Enterprise Linux (1994)",
    "content": "Red Hat Linux, which eventually branched into the Fedora project and Red Hat Enterprise Linux, is known for its commitment to stability and security. It’s a go-to for enterprises and supports a wide array of architectures. # Update package list sudo dnf check-update # Upgrade packages sudo dnf upgrade # Install a package sudo dnf install package_name # Remove a package sudo dnf remove package_name . ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#red-hat-linuxfedora-the-mother-of-enterprise-linux-1994",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#red-hat-linuxfedora-the-mother-of-enterprise-linux-1994"
  },"15": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "SUSE/openSUSE: The Chameleon in the World of Linux (1994)",
    "content": "SUSE (and its community counterpart openSUSE) is known for its YaST control center, which makes system configuration a breeze. The distribution has strong support for enterprise applications. # Refresh repositories sudo zypper refresh # Upgrade packages sudo zypper up # Install a package sudo zypper in package_name # Remove a package sudo zypper rm package_name . ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#suseopensuse-the-chameleon-in-the-world-of-linux-1994",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#suseopensuse-the-chameleon-in-the-world-of-linux-1994"
  },"16": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "Ubuntu: Linux for Human Beings (2004)",
    "content": "Ubuntu, derived from Debian, is one of the most popular Linux distributions out there. Its ease of use and strong community support make it a great choice for new Linux users. It’s the basis for many other distributions like Linux Mint, elementary OS, and Pop!_OS. # Update package list sudo apt update # Upgrade packages sudo apt upgrade # Install a package sudo apt install package_name # Remove a package sudo apt remove package_name . ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#ubuntu-linux-for-human-beings-2004",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#ubuntu-linux-for-human-beings-2004"
  },"17": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "Arch Linux: Keep It Simple, Stupid! (2002)",
    "content": "Arch Linux follows a rolling-release model and operates on a KISS (Keep It Simple, Stupid) principle. With its detailed documentation and flexibility, Arch Linux is a great distribution for those who want to build their system from the ground up. # Synchronize and update packages sudo pacman -Syu # Install a package sudo pacman -S package_name # Remove a package sudo pacman -R package_name . ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#arch-linux-keep-it-simple-stupid-2002",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#arch-linux-keep-it-simple-stupid-2002"
  },"18": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "Linux Mint: From Freedom Came Elegance (2006)",
    "content": "Linux Mint is a user-friendly distribution based on Ubuntu. It includes a lot of “out of the box” features that other distributions might lack, making it a popular choice for both Linux beginners and experienced users. # Update package list sudo apt update # Upgrade packages sudo apt upgrade # Install a package sudo apt install package_name # Remove a package sudo apt remove package_name . These distributions and their most used commands are just the tip of the iceberg when it comes to Linux. The Linux ecosystem is vast, and every distribution brings something unique to the table. With a wealth of options available, it’s all about finding the one that suits your needs the most. Happy exploring! . ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#linux-mint-from-freedom-came-elegance-2006",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands#linux-mint-from-freedom-came-elegance-2006"
  },"19": {
    "doc": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "title": "a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    "content": " ",
    "url": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands",
    
    "relUrl": "/Lucian/a-journey-through-linux-evolution-of-major-distributions-and-their-most-popular-commands"
  },"20": {
    "doc": "activerTelnetSousWindows",
    "title": "activerTelnetSousWindows",
    "content": "Telnet n’est pas installé par défaut et lorsque vous essayez d’utiliser la commande Telnet, vous obtenez ce message. 1) Allez dans le Fonctionnalités de Windows (Windows + R) tapez optionalfeatures . 2) Cocher Client Tlenet . 3) Redémarrer l’ordinateur. libellules.ch . ",
    "url": "/Medaey/activerTelnetSousWindows",
    
    "relUrl": "/Medaey/activerTelnetSousWindows"
  },"21": {
    "doc": "advanced-file-manipulation-sed-and-awk",
    "title": "Sed (Stream Editor)",
    "content": "sed is a stream editor used for filtering and transforming text. It works by making non-interactive changes to input data using pre-written scripts or commands. Let’s take a look at some essential sed operations. # Echo a string, but substitute 'world' for 'there' echo \"Hello world\" | sed 's/world/there/' # Output: \"Hello there\" . This example uses the s/old/new/ sed command to substitute “world” with “there”. You can also modify files in place with -i option. # Replace 'old-word' with 'new-word' in example.txt sed -i 's/old-word/new-word/g' example.txt . The ‘g’ flag after the substitution command tells sed to make the change globally on each line, not just for the first match. ",
    "url": "/Lucian/advanced-file-manipulation-sed-and-awk#sed-stream-editor",
    
    "relUrl": "/Lucian/advanced-file-manipulation-sed-and-awk#sed-stream-editor"
  },"22": {
    "doc": "advanced-file-manipulation-sed-and-awk",
    "title": "Awk",
    "content": "awk is a powerful text-processing language named after its authors: Aho, Weinberger, and Kernighan. awk views a text file as records and fields, which makes it ideal for tasks involving structured data. Here’s a basic usage of awk: . # Print the first field in a space-separated file awk '{print $1}' file.txt . This command prints the first field (column) of each record (row) in file.txt. But awk really shines when you use it to process data. For example, let’s assume we have a file called employees.txt with the structure: Name Age Salary. # Print the name and salary of employees who are older than 50 awk '$2 &gt; 50 {print $1, $3}' employees.txt . This command would output the name and salary of all employees over the age of 50. As you can see, awk commands can almost read like English, making them somewhat intuitive. For more complex operations, you can put awk commands in a file and run that file, which can be very useful for scripting. # Contents of command.awk BEGIN {print \"File Contents:\"} {print $0} END {print \"File EOF\"} # Run command.awk on file.txt awk -f command.awk file.txt . This awk script prints a header, the contents of file.txt, and a footer. With awk and sed, you have the power to manipulate files and data in complex ways. But keep in mind that with great power comes great responsibility. These commands are incredibly flexible and powerful, but they can also be hard to master. The best way to learn them is through practice, so don’t be afraid to experiment with different commands and scripts. Happy scripting! . ",
    "url": "/Lucian/advanced-file-manipulation-sed-and-awk#awk",
    
    "relUrl": "/Lucian/advanced-file-manipulation-sed-and-awk#awk"
  },"23": {
    "doc": "advanced-file-manipulation-sed-and-awk",
    "title": "advanced-file-manipulation-sed-and-awk",
    "content": "Shell scripting in Unix-like operating systems is not complete without the mention of stream editors like sed and text-processing languages like awk. These powerful utilities offer a whole new level of data and file manipulation beyond simple read, write, and move commands. ",
    "url": "/Lucian/advanced-file-manipulation-sed-and-awk",
    
    "relUrl": "/Lucian/advanced-file-manipulation-sed-and-awk"
  },"24": {
    "doc": "ajouterProgrammeAuDemarrageWindows",
    "title": "ajouterProgrammeAuDemarrageWindows",
    "content": "1) Appuyer sur Windows + R et lancer l’éditeur de registre . 2) Crée une nouvelle valeur chaîne dans la clé de registre . Ordinateur\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run . 3) Renommer cette Nouvelle valeur #1 par le nom du programme (Par exemple VLC) . 4) Modifier la valeur pour ajouter le chemin d’accès du .exe dans le champ (Dans notre exempleC:\\Program Files\\VideoLAN\\VLC lc.exe) . 5) Vérifier avec le gestionnaire de tâches que le programme apparais dans l’onglet Démarrage  . ",
    "url": "/Medaey/ajouterProgrammeAuDemarrageWindows",
    
    "relUrl": "/Medaey/ajouterProgrammeAuDemarrageWindows"
  },"25": {
    "doc": "bash-csv-a-compact-guide",
    "title": "Reading CSV Files in Bash",
    "content": "Reading a CSV file in Bash is simple. You can use the cat command coupled with a while-read loop. Below is an example: . while IFS=',' read -r col1 col2 col3 do echo \"Column 1: $col1 Column 2: $col2 Column 3: $col3\" done &lt; example.csv . In this script, we set the Internal Field Separator (IFS) to a comma for the read command, which enables us to read each line of the CSV as separate variables. Each line is split at the commas, allowing us to manipulate each column’s data independently. ",
    "url": "/Lucian/bash-csv-a-compact-guide#reading-csv-files-in-bash",
    
    "relUrl": "/Lucian/bash-csv-a-compact-guide#reading-csv-files-in-bash"
  },"26": {
    "doc": "bash-csv-a-compact-guide",
    "title": "Writing CSV Files in Bash",
    "content": "Writing to a CSV file involves redirecting output to a file. The key detail here is formatting your output to be CSV-compatible. See this example: . for i in {1..5} do echo \"$i,$((i*2)),$((i*3))\" &gt;&gt; output.csv done . In the above script, we generate a CSV file where each line has three columns: i, 2i, and 3i. ",
    "url": "/Lucian/bash-csv-a-compact-guide#writing-csv-files-in-bash",
    
    "relUrl": "/Lucian/bash-csv-a-compact-guide#writing-csv-files-in-bash"
  },"27": {
    "doc": "bash-csv-a-compact-guide",
    "title": "Advanced CSV Manipulation with awk and sed",
    "content": "For complex manipulations, awk and sed come in handy. Suppose you need to calculate the sum of numbers in the second column of a CSV file. Here’s how to do it using awk: . awk -F',' '{sum+=$2} END {print sum}' example.csv . Here, -F',' sets the field separator to a comma. '{sum+=$2}' adds the value of the second field of each line to the sum variable. 'END {print sum}' prints the sum after processing all lines. ",
    "url": "/Lucian/bash-csv-a-compact-guide#advanced-csv-manipulation-with-awk-and-sed",
    
    "relUrl": "/Lucian/bash-csv-a-compact-guide#advanced-csv-manipulation-with-awk-and-sed"
  },"28": {
    "doc": "bash-csv-a-compact-guide",
    "title": "In Summary",
    "content": "Bash is a powerful tool for basic CSV manipulations, due to its effective text manipulation capabilities and wide usage in the Unix world. However, for more complex manipulations and data analysis tasks, it’s recommended to use a dedicated data processing language such as Python, R, or SQL. ",
    "url": "/Lucian/bash-csv-a-compact-guide#in-summary",
    
    "relUrl": "/Lucian/bash-csv-a-compact-guide#in-summary"
  },"29": {
    "doc": "bash-csv-a-compact-guide",
    "title": "bash-csv-a-compact-guide",
    "content": "The Comma-Separated Values (CSV) format is a staple in the realm of data manipulation and storage. Various languages like Python or R are used for data manipulation, but Bash also offers a compelling, lightweight solution for CSV file interaction. Let’s explore how to read and write CSV files in Bash. ",
    "url": "/Lucian/bash-csv-a-compact-guide",
    
    "relUrl": "/Lucian/bash-csv-a-compact-guide"
  },"30": {
    "doc": "basic-resource-monitoring-in-linux",
    "title": "top",
    "content": "The top command is one of the most commonly used commands for monitoring system resources. It provides a real-time, dynamic view of the processes running on a system. top . The output of the top command includes system summary information as well as a list of tasks currently being managed by the Linux kernel. The summary information includes the total uptime, the number of tasks, CPU usage, and memory usage. The real power of top lies in its interactivity. You can send signals to processes (like killing a process) directly from top by pressing ‘k’ and entering the process ID and signal to send. ",
    "url": "/Lucian/basic-resource-monitoring-in-linux#top",
    
    "relUrl": "/Lucian/basic-resource-monitoring-in-linux#top"
  },"31": {
    "doc": "basic-resource-monitoring-in-linux",
    "title": "htop",
    "content": "While top is incredibly useful, it has some limitations that have been addressed by a more robust tool called htop. To install htop, you can use the package manager for your system, like yum for CentOS or apt for Ubuntu. sudo yum install htop # or sudo apt install htop . Like top, htop shows a list of processes running on the system, but it also includes a graphical representation of your CPU usage, memory usage, and swap usage right at the top. htop . htop allows you to scroll horizontally to view additional information about each process, and you can scroll vertically to view different processes. It’s also a lot more colorful, which can make it easier to parse at a glance. ",
    "url": "/Lucian/basic-resource-monitoring-in-linux#htop",
    
    "relUrl": "/Lucian/basic-resource-monitoring-in-linux#htop"
  },"32": {
    "doc": "basic-resource-monitoring-in-linux",
    "title": "vmstat",
    "content": "vmstat, or virtual memory statistics, is a tool for monitoring system resources related to memory, including virtual memory, disk I/O activity, and system activity. vmstat 5 . This command gives you a new summary line every five seconds. These lines include information on processes, memory, paging, block I/O, traps, and cpu activity. ",
    "url": "/Lucian/basic-resource-monitoring-in-linux#vmstat",
    
    "relUrl": "/Lucian/basic-resource-monitoring-in-linux#vmstat"
  },"33": {
    "doc": "basic-resource-monitoring-in-linux",
    "title": "iostat",
    "content": "The iostat command stands for input/output statistics and is used for monitoring system input/output device loading by observing the time the devices are active in relation to their average transfer rates. iostat . iostat produces reports that can be used to change system configurations to better balance the input/output load between physical disks. ",
    "url": "/Lucian/basic-resource-monitoring-in-linux#iostat",
    
    "relUrl": "/Lucian/basic-resource-monitoring-in-linux#iostat"
  },"34": {
    "doc": "basic-resource-monitoring-in-linux",
    "title": "netstat",
    "content": "netstat, or network statistics, is a command-line tool that displays network connections (both incoming and outgoing), routing tables, and a number of network interface and network protocol statistics. netstat . It is used for finding problems in the network and to determine the amount of traffic on the network as a performance measurement. ",
    "url": "/Lucian/basic-resource-monitoring-in-linux#netstat",
    
    "relUrl": "/Lucian/basic-resource-monitoring-in-linux#netstat"
  },"35": {
    "doc": "basic-resource-monitoring-in-linux",
    "title": "Conclusion",
    "content": "Effective resource monitoring in Linux is an essential skill for many IT professions. By understanding and using tools like top, htop, vmstat, iostat, and netstat, you can ensure that your Linux systems are running smoothly and efficiently. Remember, the key to effective system monitoring is regular observation and understanding the normal operational baseline of your system. This way, you can detect any unusual activity and investigate it further using the appropriate tools. These tools each have a multitude of options and variations in how they report data. Don’t be afraid to dive into their respective man pages (man top, man htop, etc.) to explore more about what they offer. Happy monitoring! . ",
    "url": "/Lucian/basic-resource-monitoring-in-linux#conclusion",
    
    "relUrl": "/Lucian/basic-resource-monitoring-in-linux#conclusion"
  },"36": {
    "doc": "basic-resource-monitoring-in-linux",
    "title": "basic-resource-monitoring-in-linux",
    "content": "Linux-based systems are often used in environments that require continuous monitoring. Server administrators, DevOps engineers, and even developers need to monitor system resources such as CPU usage, memory consumption, and disk I/O to ensure optimal performance and stability. The key to effective monitoring is understanding the tools available in the Linux ecosystem. Let’s dive into some of these tools: top, htop, vmstat, iostat, and netstat. ",
    "url": "/Lucian/basic-resource-monitoring-in-linux",
    
    "relUrl": "/Lucian/basic-resource-monitoring-in-linux"
  },"37": {
    "doc": "bind9",
    "title": "I Présentation",
    "content": "Qu’est-ce que le DNS ? . Le DNS à pour but de traduire les noms de domaines en adresses IP. Chaque appareil connecté à un réseau, dispose d’une adresse IP unique. Grâce aux serveurs DNS, une adresse IP (par exemple, 172.217.19.238 en IPv4) devient www.google.com c’est tout de même plus simple à mémoriser pour nous autres humain. Pour mettre en place un tel service, je vais créer un serveur DNS sous debian11 avec l’outil Bind9. ",
    "url": "/Medaey/bind9#i-pr%C3%A9sentation",
    
    "relUrl": "/Medaey/bind9#i-présentation"
  },"38": {
    "doc": "bind9",
    "title": "II Installation de bind9",
    "content": "Prérequis . Je commence par installer les paquets dnsutils et bind9 . sudo apt-get install dnsutils bind9 -y . Maintenant je crée une zone par exemple cossu.tech . ℹ️ Uniquement les machines qui ont pour DNS principal le serveur bind 9 utiliseront notre zone. Déjà il est préférable que le nom du serveur porte le même nom que la zone qu’il diffusera dans mon cas cossu.tech . sudo hostnamectl set-hostname cossu.tech . Puis changer la résolution de nom local pour cela il va falloir connaitre l’adresse IP du serveur. J’utilise la commande . ip a . 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 08:00:27:6d:df:9d brd ff:ff:ff:ff:ff:ff inet 192.168.1.24/24 brd 192.168.1.255 scope global dynamic enp0s3 valid_lft 84835sec preferred_lft 84835sec . 192.168.1.24 est donc l’adresse ip du serveur, il me reste à la renseigné dans le fichier. sudo nano /etc/hosts . 127.0.0.1 localhost 127.0.1.1 cossu.tech 192.168.1.24 cossu.tech . Pour effectuer des test j’indique au serveur de faire appel à lui mếme “192.168.1.24”. sudo nano /etc/resolv.conf . ℹ️ Cette modification disparaîtra après le redémarrage du serveur. domain cossu.tech search cossu.tech nameserver 192.168.1.25 . Je redémarre le service resolved pour appliquer les modifications. sudo systemctl restart systemd-resolved sudo systemctl enable systemd-resolved . Vérification du bon fonctionnement du service resolved . systemd-resolve --status . Global Protocols: +LLMNR +mDNS -DNSOverTLS DNSSEC=no/unsupported resolv.conf mode: foreign Current DNS Server: 192.168.1.24 DNS Servers: 192.168.1.24 DNS Domain: cossu.tech . Visiblement tout va bien. ",
    "url": "/Medaey/bind9#ii-installation-de-bind9",
    
    "relUrl": "/Medaey/bind9#ii-installation-de-bind9"
  },"39": {
    "doc": "bind9",
    "title": "III Configuration de la zone",
    "content": "Je vais modifier la configuration de bind 9 pour lui indiquer que tous les noms qu’il ne connait pas seront à transférer à un autre serveur DNS par exemple 8.8.8.8 (le DNS de google). sudo nano /etc/bind/named.conf.options . Ce fichier contient les options de configuration du serveur DNS. options { directory “/var/cache/bind”; forwarders { 8.8.8.8; }; dnssec-validation auto; listen-on-v6 { any; }; }; . Dans un autre fichier, je déclare les noms de domaines et le chemin vers un fichier qui servira de “base de données”. ℹ️ Les infos in-addr.arpa sont à modifier en fonction du réseau, étant dans le réseau 192.168.1.0/24 . sudo nano /etc/bind/named.conf.local . zone “cossu.tech” { type master; file “/etc/bind/db.cossu.tech”; }; . zone “1.168.192.in-addr.arpa” { type master; file “/etc/bind/db.1.168.192.in-addr.arpa”; }; . ",
    "url": "/Medaey/bind9#iii-configuration-de-la-zone",
    
    "relUrl": "/Medaey/bind9#iii-configuration-de-la-zone"
  },"40": {
    "doc": "bind9",
    "title": "IV Création des bases de données",
    "content": "Allez c’est parti pour créer un fichier “base de données” qui référence les associations ip / nom. sudo nano /etc/bind/db.cossu.tech . $TTL 604800 $ORIGIN cossu.tech. @ IN SOA dns.cossu.tech. admin.cossu.tech ( 20221703 ; Numero de serie AnneMoisJour 604800 ; Temps de rafraichissement 86400 ; Temps entre les essais 2419200 ; Temps expiration 604800 ) ; Valeur TTL minimum @ IN NS dns.cossu.tech. DNS IN A 192.168.1.24 linux IN A 192.168.1.14 linuxPortable IN A 192.168.1.18 win10 IN A 192.168.1.45 . Maintenant, il faut s’assurer qu’il n’y a pas d’erreurs dans les fichiers db.cossu.tech . sudo named-checkzone cossu.tech /etc/bind/db.cossu.tech . zone cossu.dev/IN: loaded serial 20221703 OK . C’est OK donc je passe à la configuration de la zone inverse qui permet d’obtenir un nom à partir d’une adresse ip. sudo nano /etc/bind/db.1.168.192.in-addr.arpa . $TTL 604800 @ IN SOA dns.cossu.tech. admin.cossu.tech ( 20221703 ; Numero de serie AnneMoisJour 604800 ; Temps de rafraichissement 86400 ; Temps entre les essais 2419200 ; Temps expiration 604800 ) ; Valeur TTL minimum . @ IN NS dns.cossu.tech. 24 IN PTR dns.cossu.tech. 14 IN PTR linux.cossu.tech. 18 IN PTR linuxPortable.cossu.tech. 45 IN PTR win10.cossu.tech. Je vérifi la syntaxe du fichier db.1.168.192.in-addr.arpa . sudo named-checkzone 1.168.192.in-addr.arpa /etc/bind/db.1.168.192.in-addr.arpa . zone 1.168.192.in-addr.arpa/IN: loaded serial 20221703 OK . Tout va bien, il est temps de redémarrer le service bind9 . sudo systemctl restart bind9 . Le moment fatidique est arrivé, voir si la résolution de nom fonctionne. Pour cela, la commande nslookup est une alliée de choix. nslookup linux.cossu.tech . Server: 192.168.1.24 Address: 192.168.1.24#53 . Name: linux.cossu.tech Address: 192.168.1.14 . Le serveur DNS 192.168.1.24 dit que le nom linux.cossu.tech est égal à l’adresse 192.168.1.14, ça fonctionne ! Allé maintenant il faut tester la zone inverse. nslookup 192.168.1.14 . 14.1.168.192.in-addr.arpa name = linux.cossu.tech. Nslookup dit que 192.168.1.14 c’est le nom linux.cossu.dev ! Le serveur change les noms en ip et inversement. 🤩 . 📝https://www.cloudflare.com/fr-fr/learning/dns/what-is-dns/ 📝https://wiki.csnu.org/index.php/Installation_et_configuration_de_bind9 📝https://www.isc.org/bind/ 📝https://wiki.debian.org/fr/Bind9 . ",
    "url": "/Medaey/bind9#iv-cr%C3%A9ation-des-bases-de-donn%C3%A9es",
    
    "relUrl": "/Medaey/bind9#iv-création-des-bases-de-données"
  },"41": {
    "doc": "bind9",
    "title": "bind9",
    "content": "[TOC] . ⏩ Par le temps ? Utilise mon rôle Ansible bind9:smile: . Debian 11 . git clone https://github.com/medaey/role-ansible.git . ",
    "url": "/Medaey/bind9",
    
    "relUrl": "/Medaey/bind9"
  },"42": {
    "doc": "cetteCopieDeWindowsEstPasAuthentique",
    "title": "cetteCopieDeWindowsEstPasAuthentique",
    "content": "Vous avez cette erreur alors que vous posséder une version originale de Windows? Les 2 commandes ci-dessous devraient résoudre ce problème. 1) Ouvrir une invitation de commandes en tant qu’administrateur . 2) Réinitialise les licences avec cette commande: . slmgr /rilc .  (Cette commande réinitialise toutes les licences stockées dans les dossiers %SystemRoot%\\system32\\oem et %SystemRoot%\\System32\\spp\\tokens) . 3) Réinitialise les minuteurs d’activation: . slmgr /rearm . Si l’erreur 0xc004D307 apparaît faite les étapes 4*,5*,6* sinon passer à l’étape 7 . 4*) Lancer l’éditeur de registre Windows + R tapez regedit   . 5*) Modifier la clef de registre SkipRearm (suivre le chemin ci-dessous): . HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SoftwareProtectionPlatform . 6*) Modifier la valeur de SkipRearm de 0 à 1. Cette fois-ci la commande de l’étape 3 devrait fonctionner . slmgr /rearm . 7) Redémarrer l’ordinateur . 8) Vérifier que la licence Windows est bien activée Windows + R tapez slui ** ** . Windows 7:   . Windows 10:   . microsoft.com . ",
    "url": "/Medaey/cetteCopieDeWindowsEstPasAuthentique",
    
    "relUrl": "/Medaey/cetteCopieDeWindowsEstPasAuthentique"
  },"43": {
    "doc": "changer-la-configuration-dns-windows",
    "title": "changer-la-configuration-dns-windows",
    "content": "1) Ouvrir une invitation de commandes en tant qu’administrateur . 2) Lister les interfaces réseau disponible . netsh int show int . À ce stade 2 choix s’offrent à vous ————————————— . | Récupérer l’adresse ip des DNS via votre DHCP de façon dynamique étape 5* | Définir le DNS avec des adresses Ip statique étape 3,4 | . 3) Définir le DNS primaire 8.8.8.8 sur l’interface réseau connexion au réseau local . netsh int ip set dnsservers \"Connexion au réseau local\" static 8.8.8.8 primary . (Remplacer connexion au réseau local par le nom de l’interface que vous souhaitez modifier &amp; 8.8.8.8 par l’adresse IP du dns voulut.) . 4) Définit le DNS secondaire sur l’ip 8.8.4.4 . netsh int ip add dns \"Connexion au réseau local\" 8.8.4.4 2 . (Le 2 à la fin veut dire 2éme dns et il est possible d’en définir un 3éme 4éme dns etc….) . 5*) Récupérer l’ip dynamique fourni par votre DHCP . netsh int ip set dnsservers name=\"Connexion au réseau local\" source=dhcp . 6*) Réinitialiser la configuration réseau . netsh int ip reset . wikipedia.org . ",
    "url": "/Medaey/changer-la-configuration-dns-windows",
    
    "relUrl": "/Medaey/changer-la-configuration-dns-windows"
  },"44": {
    "doc": "changer-port-ssh-serveur-linux",
    "title": "changer-port-ssh-serveur-linux",
    "content": "1) Mettre à jour votre serveur: . apt-get update &amp;&amp; apt-get upgrade -y . 2) Installer la commande nano: . apt-get install nano . 3) Éditer le fichier /etc/ssh/sshd_config: . sudo nano /etc/ssh/sshd\\_config . 4) Modifier la ligne port &amp; indiquer le port que vous voulez utiliser pour la connexion ssh: . (Par exemple le port 65468) . 5) Redémarrer le service sshd: . sudo service sshd restart . 6) Installer le pare-feu ufw: . sudo apt-get install ufw . 7) Autoriser le nouveau port ssh dans le pare-feu: . sudo ufw allow 65468/tcp . (Bien sûr changer 65468 par le port que vous avez indiqué à l’étape 4) . 8) Vérifier que les règles du pare-feu: . sudo ufw status numbered . 9) Active le pare-feu: . sudo ufw enable . (Attention si vous vos étés trompés vous risquez de ne plus pouvoir vous connecter en ssh sur le serveur, alors revérifier l’étape 4 &amp; 8) . 10) Redémarrer le services sshd: . /etc/init.d/sshd restart . Voilà c’est fini, il ne reste plus qu’à se connecter en ssh sur le nouveau port ssh. korben.info . ",
    "url": "/Medaey/changer-port-ssh-serveur-linux",
    
    "relUrl": "/Medaey/changer-port-ssh-serveur-linux"
  },"45": {
    "doc": "connecter-un-lecteur-réseau-avec-l'invitation-de-commande-Windows",
    "title": "connecter-un-lecteur-réseau-avec-l'invitation-de-commande-Windows",
    "content": "1) Ouvrir une invitation de commandes en tant qu’administrateur . 2) Saisir le chemin d’accès réseau . net use G: \\gland\\dossier_a_lire . (Remplacer G: par le lecteur souhaiter et \\gland\\dossier_a_lire par votre chemin d’accès réseau) . 3*) Déconnecter un lecteur réseau . net use G: /delete . (Remplacer G: par le lecteur que vous souhaiter déconnecter) . microsoft.com . ",
    "url": "/Medaey/connecter-un-lecteur-r%C3%A9seau-avec-l'invitation-de-commande-Windows",
    
    "relUrl": "/Medaey/connecter-un-lecteur-réseau-avec-l'invitation-de-commande-Windows"
  },"46": {
    "doc": "convertir-des-images-sous-linux",
    "title": "convertir-des-images-sous-linux",
    "content": "1) Mettre à jour les dépôts &amp; paquets . sudo apt-get update &amp;&amp; sudo apt-get upgrade -y . 2) Installer les paquets ghostscript &amp; ImageMagisk . sudo apt-get install ghostscript imagemagick . Pour tester, il suffit de convertir un .png en .svg . exemple 1: . convert poulet.png poulet.svg . exemple 2: . convert /home/user/Images/avatar.jpg /home/user/Images/avatar.pdf . ubuntu-fr.org . ",
    "url": "/Medaey/convertir-des-images-sous-linux",
    
    "relUrl": "/Medaey/convertir-des-images-sous-linux"
  },"47": {
    "doc": "créer-un-vpn-avec-open-vpn",
    "title": "créer-un-vpn-avec-open-vpn",
    "content": "1.Mise en place du serveur . 1) Télécharger le script d’installation . wget https://raw.githubusercontent.com/Angristan/OpenVPN-install/master/openvpn-install.sh . 2) Ajouter le droit d’exécuter le script . chmod +x openvpn-install.sh . 3) Lance l’installation ./openvpn-install.sh . (il suffi de suivre le script =p) . 4) Ouvrir le port 1194 en udp . ufw allow 1194/udp . (bien sur si vous changer le port du service openvpn, il faudra ouvre un autre port) . 5) Ajouté ou supprimer des utilisateurs puis relancer le script ./openvpn-install.sh . 2.Client sous linux . | Téléchager le fichier client.ovpn qui est sur votre serveur, avec Filezilla ou winscp. | Installé le client openvpn et c’est dépendance | . sudo aptitude install openvpn resolvconf network-manager-openvpn-gnome . (Redémarrer la machine pour finaliser l’installation.) . | Clique gauche sur l’icône réseau du Tableau de bord &gt; Connexions VPN &gt; Configurer le VPN &gt; Importer. | .  3.Client sous Windows . | Téléchager le fichier client.ovpn qui est sur votre serveur, avec Filezilla ou winscp. | Télécharger le client OpenVpn. | Importer le fichier client.ovpn, icône de notification open vpn &gt; clic droit &gt; importer fichier | . github.com . ",
    "url": "/Medaey/cr%C3%A9er-un-vpn-avec-open-vpn",
    
    "relUrl": "/Medaey/créer-un-vpn-avec-open-vpn"
  },"48": {
    "doc": "data-handling-in-software",
    "title": "Databases",
    "content": "One of the most common ways that software handles data is through databases. A database is a systematic collection of data. They support storage and manipulation of data and provide a highly efficient way to handle large amounts of data. There are different types of databases, each suitable for different kinds of applications. Relational databases, like MySQL, PostgreSQL, and Oracle, organize data into tables and rows, making it easy to establish relationships between different data types. Non-relational databases, like MongoDB or Cassandra, are more flexible and are typically used when dealing with large volumes of diverse and dynamic data. Databases offer several operations including data creation, reading, updating, and deletion (CRUD operations). They allow for complex queries to retrieve specific data and offer features like backup and recovery, ensuring data safety. ",
    "url": "/Lucian/data-handling-in-software#databases",
    
    "relUrl": "/Lucian/data-handling-in-software#databases"
  },"49": {
    "doc": "data-handling-in-software",
    "title": "Data Structures",
    "content": "Data structures are another critical aspect of data handling in software. They are a specialized format for organizing and storing data. Common types of data structures include arrays, linked lists, stacks, queues, trees, and graphs. The choice of data structure significantly impacts the performance of a software application. It influences how data is organized in memory, how much memory is used, and how efficiently certain operations, like sorting or searching, can be performed. ",
    "url": "/Lucian/data-handling-in-software#data-structures",
    
    "relUrl": "/Lucian/data-handling-in-software#data-structures"
  },"50": {
    "doc": "data-handling-in-software",
    "title": "Algorithms",
    "content": "To process and manipulate the data, software uses algorithms. An algorithm is a set of step-by-step procedures, or a formula, for performing a specific task. Whether it’s a sorting algorithm like QuickSort or MergeSort, a search algorithm like Binary Search, or a machine learning algorithm like a neural network, algorithms are crucial to getting insights from data. ",
    "url": "/Lucian/data-handling-in-software#algorithms",
    
    "relUrl": "/Lucian/data-handling-in-software#algorithms"
  },"51": {
    "doc": "data-handling-in-software",
    "title": "Data Flow",
    "content": "Software often follows a data flow architecture to handle data. This includes input-process-output (IPO) cycles. In the ‘Input’ stage, data is collected from various sources. It could be user input or data from an external system. ‘Process’ stage involves data manipulation. This is where algorithms and data structures come into play. And finally, in the ‘Output’ stage, data is presented or delivered to the end user or another system in a readable and understandable format. ",
    "url": "/Lucian/data-handling-in-software#data-flow",
    
    "relUrl": "/Lucian/data-handling-in-software#data-flow"
  },"52": {
    "doc": "data-handling-in-software",
    "title": "Conclusion",
    "content": "Understanding how software handles data is crucial in the world of programming and software development. From databases to data structures and algorithms, various components work in harmony to provide users with the information they need. This post only scratches the surface of this complex topic. To really dive deep, consider studying computer science or a related field, and exploring these concepts in more detail. ",
    "url": "/Lucian/data-handling-in-software#conclusion",
    
    "relUrl": "/Lucian/data-handling-in-software#conclusion"
  },"53": {
    "doc": "data-handling-in-software",
    "title": "data-handling-in-software",
    "content": "In today’s digital age, software applications play a pivotal role in handling, managing, and manipulating data. Data, in various formats, can be input by the user, gathered from external sources, or generated by the software itself. Once the data is collected, it’s stored, manipulated, and output in various forms to deliver the functionality intended by the software. This process is often so seamless that end users might not even realize the complexity and sophistication behind the data handling process. ",
    "url": "/Lucian/data-handling-in-software",
    
    "relUrl": "/Lucian/data-handling-in-software"
  },"54": {
    "doc": "decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    "title": "Bourne Shell (sh)",
    "content": "Introduced in 1979 as part of Version 7 Unix, the Bourne Shell, also known as sh, was the original Unix shell written by Stephen Bourne at Bell Labs. The syntax and features of sh became widely adopted and formed the foundation for many of the scripting languages we see today. Its features included programming flow control, shell variables, and interactive command-line editing. However, it lacked certain features such as command-line editing and job control, which are commonly found in more modern shells. ",
    "url": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#bourne-shell-sh",
    
    "relUrl": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#bourne-shell-sh"
  },"55": {
    "doc": "decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    "title": "Bourne Again Shell (bash)",
    "content": "Recognizing the limitations of sh, the Bourne Again SHell (bash) was developed as part of the GNU Project and was released in 1989. bash is essentially a superset of sh, meaning any script written for sh can be executed in bash. bash incorporated features from the C Shell (csh) and the Korn Shell (ksh), including command-line editing, job control, shell functions and aliases, indexed arrays of unlimited size, and integer arithmetic in any base from two to sixty-four. Due to its powerful features and the fact it comes as the default shell on many Unix systems, including Linux and macOS, bash is widely used and appreciated by developers around the world. ",
    "url": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#bourne-again-shell-bash",
    
    "relUrl": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#bourne-again-shell-bash"
  },"56": {
    "doc": "decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    "title": "Z Shell (zsh)",
    "content": "The Z Shell (zsh) was released in 1990 by Paul Falstad as an extended Bourne Shell with a large number of improvements, including some features of bash, ksh, and tcsh. Key features that zsh boasts include spelling correction, shared command history, extended file globbing, and a plethora of options for customizing its behavior. It also provides advanced scripting features, including associative arrays and anonymous functions. In recent years, zsh has seen a surge in popularity due to the Oh My Zsh user community, which provides a variety of powerful plugins, helpers, themes, and functions that make using the terminal a pleasant and customizable experience. ",
    "url": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#z-shell-zsh",
    
    "relUrl": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#z-shell-zsh"
  },"57": {
    "doc": "decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    "title": "Korn Shell (ksh)",
    "content": "The Korn Shell (ksh) was developed by David Korn of Bell Labs in the mid-1980s and was aimed to provide a robust and efficient shell environment. ksh introduced many features that were later adopted by bash and zsh. These include command history, command-line editing, job control, shell functions and aliases, and array variables. ksh also boasts compatibility with sh, which makes it an easy transition for users familiar with the Bourne Shell. While ksh is not as widely adopted as bash or zsh, it is recognized for its performance and efficiency and is often the default shell in commercial Unix environments. ",
    "url": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#korn-shell-ksh",
    
    "relUrl": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#korn-shell-ksh"
  },"58": {
    "doc": "decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    "title": "Conclusion",
    "content": "While each shell has its strengths and quirks, the choice of shell often comes down to personal preference or the specific requirements of your environment. For those new to the Unix environment, bash provides a robust feature set and is the default on many systems. zsh offers extensive customization options and a rich user community. ksh is well-suited for performance-critical environments where efficiency is key. In any case, understanding the nuances of these shell environments can provide valuable insight into how to effectively interact with Unix-based systems and how to optimize your workflows based on the tools at hand. ",
    "url": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#conclusion",
    
    "relUrl": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond#conclusion"
  },"59": {
    "doc": "decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    "title": "decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    "content": "Shell environments are fundamental tools for any software engineer, devops practitioner or system administrator. They not only provide an interface to interact with the operating system but also offer a wide variety of in-built functionalities to make scripting and command-line navigation easier and more efficient. In this article, we will explore some of the most commonly used shell environments - sh (Bourne Shell), bash (Bourne Again Shell), zsh (Z Shell), and ksh (Korn Shell). We’ll delve into their origins, features, and understand why and where they are used. ",
    "url": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond",
    
    "relUrl": "/Lucian/decoding-the-shells-sh-bash-zsh-ksh-and-beyond"
  },"60": {
    "doc": "disque-dur-en-collision-de-signature",
    "title": "disque-dur-en-collision-de-signature",
    "content": "1) Ouvrir une invitation avec les droits administrateur . 2) Lancer Diskpart dans l’invitation de commande . diskpart . 3) Lister les disques durs disponibles . list disk . 4) Sélectionnez le disque dur hors connexion . select disk 3 . Changer 3 par le numéro du disque dur hors connexion, attention à ne pas vous tromper de disque. 5) Afficher l’ ID du disque . uniqueid disk . 6) Choisir un nouvel ID, le plus simple est de recopier l’ancien ID en modifiant un digit (digit devant être compris entre 0 et 9 et a et f) exemple: ancien ID -&gt; 01E87CE0 -&gt; nouvel ID 01E87CE1 (0 remplacé par 1) . uniqueid disk ID=01E87CE1 . 7) Vérifier que le nouvel ID est bien pris en compte . uniqueid disk . 8) Il ne reste plus qu’à déconnecter/reconnecter le disque dur, il devrait de nouveaux être utilisables. microsoft.com . ",
    "url": "/Medaey/disque-dur-en-collision-de-signature",
    
    "relUrl": "/Medaey/disque-dur-en-collision-de-signature"
  },"61": {
    "doc": "désactiver-mises-a-jour-windows",
    "title": "désactiver-mises-a-jour-windows",
    "content": "1) Ouvrir une invitation de commandes en tant qu’administrateur . 2) Arrêter le service de mise à jour Windows: . sc stop wuauserv . 3) Désactiver le redémarrage automatique sur service de mise à jour: . sc config wuauserv start= disabled . Pour effectuer de nouveau les mise à jour . 4*) Réactiver le démarrage automatique du service windows update: . sc config wuauserv start= auto . 5*) Démarre le services windows update: . sc start wuauserv . microsoft.com  windows-commandline.com . ",
    "url": "/Medaey/d%C3%A9sactiver-mises-a-jour-windows",
    
    "relUrl": "/Medaey/désactiver-mises-a-jour-windows"
  },"62": {
    "doc": "désactivé-ctrl-alt-supp-via-l'invitation-de-commande-windows",
    "title": "désactivé-ctrl-alt-supp-via-l'invitation-de-commande-windows",
    "content": "1) Ouvrir une invitation de commandes en tant qu’administrateur . 2) Changer la valeur de la clef de registre disablecad pour 00000001 . reg add \"HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /V disablecad /T REG\\_DWORD /D \"00000001\" /f . 3*) Pour réactiver CTRL + ALT + SUPP il suffit de remettre la valeur à 00000000 . reg add \"HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /V disablecad /T REG\\_DWORD /D \"00000000\" /f . top-password.com . ",
    "url": "/Medaey/d%C3%A9sactiv%C3%A9-ctrl-alt-supp-via-l'invitation-de-commande-windows",
    
    "relUrl": "/Medaey/désactivé-ctrl-alt-supp-via-l'invitation-de-commande-windows"
  },"63": {
    "doc": "efficient-disk-space-management-in-red-hat-centos",
    "title": "efficient-disk-space-management-in-red-hat-centos",
    "content": "Managing disk space effectively is crucial for system administrators, as it ensures optimal performance and the smooth operation of systems. We have various utilities at our disposal in Linux, such as df, du, dd, fdisk, parted, lvm (Logical Volume Manager), and more. df: The df command stands for “disk filesystem”. It reports the amount of disk space used and available on the file system. df -h . The -h flag makes the output human-readable. du: The du command, short for “disk usage”, summarizes the disk usage of the set of FILEs, recursively for directories. du -sh /path/to/directory . The -s option stands for “summary” and -h for “human-readable”. dd: The dd command is used to copy and convert raw data. It is widely used for generating large file for I/O testing. dd if=/dev/zero of=filename bs=1G count=1 . This creates a 1GB file named filename. fdisk: The fdisk is a command-line utility that provides disk partitioning functions. sudo fdisk -l . This lists all the disk partitions on the system. parted: parted is another command-line utility to manage disk partitions. sudo parted -l . This lists the partition layout on all block devices. When it comes to managing filesystems more dynamically, we make use of logical volume management (LVM). It provides a higher-level view of the disk storage on a computer system than the traditional view of disks and partitions. pvcreate: This creates a physical volume for later use by the logical volume manager (LVM). sudo pvcreate /dev/sdb1 . This initializes /dev/sdb1 as a physical volume. vgcreate: This creates a new volume group (vg). sudo vgcreate my_vg /dev/sdb1 . This creates a volume group my_vg using the physical volume /dev/sdb1. lvcreate: This creates a logical volume in an existing volume group. sudo lvcreate -n my_lv -L 500M my_vg . This creates a logical volume my_lv of size 500MB in the volume group my_vg. Remember, while commands like rm and rmdir are helpful for freeing up space, it’s crucial to use them judiciously since they delete files and directories. Always ensure you have a good backup policy before removing any files. I hope this article gives you a more in-depth understanding of disk management on Linux systems. Remember, the best way to master these commands is through practice, so don’t hesitate to explore these commands in your lab environment. ",
    "url": "/Lucian/efficient-disk-space-management-in-red-hat-centos",
    
    "relUrl": "/Lucian/efficient-disk-space-management-in-red-hat-centos"
  },"64": {
    "doc": "essential-directory-navigation-in-linux",
    "title": "Understanding the Current Working Directory with PWD",
    "content": "The pwd (Print Working Directory) command is used to print the path of the current working directory. It’s as simple as typing: . pwd . This will output the full system path to your current directory. ",
    "url": "/Lucian/essential-directory-navigation-in-linux#understanding-the-current-working-directory-with-pwd",
    
    "relUrl": "/Lucian/essential-directory-navigation-in-linux#understanding-the-current-working-directory-with-pwd"
  },"65": {
    "doc": "essential-directory-navigation-in-linux",
    "title": "Changing Directories with CD",
    "content": "The cd (Change Directory) command is perhaps the most frequently used command when navigating directories. It is used to change the current working directory. Here’s the basic usage: . cd /path/to/directory . But the cd command comes with several shortcuts to help you move around quickly: . To go back to your home directory, you can use the cd command without any arguments: . cd . Or you can use a tilde (~): . cd ~ . To navigate up one directory level, use: . cd .. And to navigate to the previous directory (or back), use: . cd - . ",
    "url": "/Lucian/essential-directory-navigation-in-linux#changing-directories-with-cd",
    
    "relUrl": "/Lucian/essential-directory-navigation-in-linux#changing-directories-with-cd"
  },"66": {
    "doc": "essential-directory-navigation-in-linux",
    "title": "Listing Directory Contents with LS",
    "content": "The ls command is used to list the contents of a directory. By default, running ls will display the contents of the current directory: . ls . You can also view the contents of a different directory by providing a path: . ls /path/to/directory . Use -l to display in long format, showing permissions, number of links, owner, group, size, time of last modification, and name: . ls -l . And -a to show hidden files: . ls -a . ",
    "url": "/Lucian/essential-directory-navigation-in-linux#listing-directory-contents-with-ls",
    
    "relUrl": "/Lucian/essential-directory-navigation-in-linux#listing-directory-contents-with-ls"
  },"67": {
    "doc": "essential-directory-navigation-in-linux",
    "title": "Conclusion",
    "content": "The pwd, cd, and ls commands are the bread and butter of command line navigation. With them, you can always find out where you are, move to where you want to go, and see what’s there when you arrive. Master these commands, and you’ll be well on your way to becoming proficient in the command line! . ",
    "url": "/Lucian/essential-directory-navigation-in-linux#conclusion",
    
    "relUrl": "/Lucian/essential-directory-navigation-in-linux#conclusion"
  },"68": {
    "doc": "essential-directory-navigation-in-linux",
    "title": "essential-directory-navigation-in-linux",
    "content": "When working in a command line environment such as Red Hat Enterprise Linux (RHEL), efficiently navigating through directories is a crucial skill. This article will focus on some of the most used commands to do just that. ",
    "url": "/Lucian/essential-directory-navigation-in-linux",
    
    "relUrl": "/Lucian/essential-directory-navigation-in-linux"
  },"69": {
    "doc": "exécuter-les-outils-du-panneau-de-configuration-en-tapant-une-commande",
    "title": "exécuter-les-outils-du-panneau-de-configuration-en-tapant-une-commande",
    "content": "RÉSUMÉ . Cet article décrit comment exécuter des outils du Panneau de configuration dans Windows en tapant une commande lors d’une invite de commande ou dans la zone Ouvrir. Plus d’informations . Pour exécuter un outil du Panneau de configuration dans Windows, tapez la commande appropriée dans la zone Ouvrir ou à l’invite de commande. Remarque : Si vous souhaitez exécuter une commande à partir d’une invite de commande, vous devez le faire à partir du dossier Windows. Notez également que votre ordinateur ne dispose peut-être pas de tous les outils répertoriés dans cet article, car votre installation de Windows n’inclut pas forcément tous ces composants. | Control panel tool | Command | . | Accessibility Options | control access.cpl | . | Add New Hardware | control sysdm.cpl add new hardware | . | Add/Remove Programs | control appwiz.cpl | . | Date/Time Properties | control timedate.cpl | . | Display Properties | control desk.cpl | . | FindFast | control findfast.cpl | . | Fonts Folder | control fonts | . | Internet Properties | control inetcpl.cpl | . | Joystick Properties | control joy.cpl | . | Keyboard Properties | control main.cpl keyboard | . | Microsoft Exchange | control mlcfg32.cpl | . | (or Windows Messaging) |   | . | Microsoft Mail Post Office | control wgpocpl.cpl | . | Modem Properties | control modem.cpl | . | Mouse Properties | control main.cpl | . | Multimedia Properties | control mmsys.cpl | . | Network Properties | control netcpl.cpl (or Ncpa.cpl in Win NT 4.0) | . | Password Properties | control password.cpl | . | PC Card | control main.cpl pc card (PCMCIA) | . | Power Management (Windows 95) | control main.cpl power | . | Power Management (Windows 98) | control powercfg.cpl | . | Printers Folder | control printers | . | Regional Settings | control intl.cpl | . | Scanners and Cameras | control sticpl.cpl | . | Sound Properties | control mmsys.cpl sounds | . | System Properties | control sysdm.cpl | . Remarque : l’applet Scanners et Appareils photo (sticpl.cpl) ne peut pas s’exécuter dans l’édition Windows Millennium. Il a été remplacé par le dossier Scanners et Appareils photos, dont le fonctionnement est similaire à celui de dossiers tels Imprimantes et Accès réseau à distance. Windows remplace le nom de l’outil que vous souhaitez exécuter pour %1 %. Par exemple : . « appwiz.cpl shell32.dll,Control_RunDLL de rundll32.exe ». Pour exécuter l’outil utilisateurs dans le panneau de configuration, tapez Ncpa.cpl, utilisateurs, de contrôle, puis appuyez sur ENTRÉE. Pour exécuter l’Outil utilisateurs pour Windows 95/98/Me, tapez «control inetcpl.cpl users » (sans les guillemets) et appuyez sur ENTRÉE. ",
    "url": "/Lucian/ex%C3%A9cuter-les-outils-du-panneau-de-configuration-en-tapant-une-commande",
    
    "relUrl": "/Lucian/exécuter-les-outils-du-panneau-de-configuration-en-tapant-une-commande"
  },"70": {
    "doc": "guide-to-ssh-ssh-add-and-scp",
    "title": "SSH: Secure Shell",
    "content": "SSH provides a secure channel over an unsecured network in a client-server architecture, connecting an SSH client application with an SSH server. It can be used for remote command-line login and remote command execution. Login to a remote server: . ssh user@loop.brain.fr . Execute a command on a remote server: . ssh user@loop.brain.fr 'command' . SSH connections are encrypted and secure. They provide strong password authentication and even public key authentication while maintaining connection privacy and integrity. ",
    "url": "/Lucian/guide-to-ssh-ssh-add-and-scp#ssh-secure-shell",
    
    "relUrl": "/Lucian/guide-to-ssh-ssh-add-and-scp#ssh-secure-shell"
  },"71": {
    "doc": "guide-to-ssh-ssh-add-and-scp",
    "title": "SSH-Keygen &amp; SSH-Add: Authentication Keys and Agent",
    "content": "SSH supports password-based authentication, but it’s more common and safer to use key pairs. SSH-Keygen is a tool that helps us create these pairs. Generate a new SSH key pair: . ssh-keygen -t rsa -b 4096 -C \"your_email@loop.brain.fr\" . Once you generate your key pair, you can use SSH-Add to manage your keys. SSH-Add adds RSA or DSA identities to the authentication agent (ssh-agent). Add the default identity: . ssh-add . Add a specific identity: . ssh-add ~/.ssh/id_rsa_custom . ",
    "url": "/Lucian/guide-to-ssh-ssh-add-and-scp#ssh-keygen--ssh-add-authentication-keys-and-agent",
    
    "relUrl": "/Lucian/guide-to-ssh-ssh-add-and-scp#ssh-keygen--ssh-add-authentication-keys-and-agent"
  },"72": {
    "doc": "guide-to-ssh-ssh-add-and-scp",
    "title": "SCP: Secure Copy",
    "content": "SCP allows files to be copied to, from, or between different hosts. It uses SSH for data transfer, and provides the same security and uses the same authentication as SSH. Copy a local file to a remote server: . scp localfile user@loop.brain.fr:/remote/directory/ . Copy a file from a remote server to local machine: . scp user@loop.brain.fr:/remote/file /local/directory/ . Copy a directory from a remote server to local machine: . scp -r user@loop.brain.fr:/remote/directory /local/directory/ . Copy a file between two remote servers from the local machine: . scp user@loop.brain.fr:/remote/file user@otherhost:/remote/directory/ . SSH, SSH-Add, and SCP are very powerful tools when dealing with remote servers. Their wide variety of options and parameters cover many use cases, and their secure nature makes them a default choice for system administrators all over the world. Keep in mind that this guide only scratches the surface of what is possible with these tools. Be sure to check their man pages (man ssh, man ssh-add, man scp) for a more in-depth look at their capabilities. ",
    "url": "/Lucian/guide-to-ssh-ssh-add-and-scp#scp-secure-copy",
    
    "relUrl": "/Lucian/guide-to-ssh-ssh-add-and-scp#scp-secure-copy"
  },"73": {
    "doc": "guide-to-ssh-ssh-add-and-scp",
    "title": "guide-to-ssh-ssh-add-and-scp",
    "content": "Secure Shell (SSH) is a protocol that provides a secure method to access a remote system. SSH also refers to the utilities suite that implements the protocol. Secure Copy (SCP) is a means of securely transferring computer files between a local and a remote host or between two remote hosts. SSH-Add adds private key identities to the authentication agent. ",
    "url": "/Lucian/guide-to-ssh-ssh-add-and-scp",
    
    "relUrl": "/Lucian/guide-to-ssh-ssh-add-and-scp"
  },"74": {
    "doc": "handy-commands-for-red-hat-centos",
    "title": "1. Basic File and Directory Commands",
    "content": "ls - List Directory Contents . This command is used to list the contents of a directory. ls . cd - Change Directory . To navigate through the Linux files and directories, use the cd command. cd /path/to/directory . pwd - Print Working Directory . If you want to know the absolute path of your current directory, pwd comes in handy. pwd . touch - Create a New File . Creating a new, empty file is as easy as typing touch followed by the file name. touch myfile.txt . rm - Remove a File or Directory . You can remove a file or directory using rm command. Use -r option for directories. rm myfile.txt rm -r mydirectory . ",
    "url": "/Lucian/handy-commands-for-red-hat-centos#1-basic-file-and-directory-commands",
    
    "relUrl": "/Lucian/handy-commands-for-red-hat-centos#1-basic-file-and-directory-commands"
  },"75": {
    "doc": "handy-commands-for-red-hat-centos",
    "title": "2. System Information Commands",
    "content": "uname - Print System Information . uname displays the important information about your system. The -a option prints all system information. uname -a . top - Monitor System, Process, and Users . top gives you real-time information about your system, the current processes, and users. top . df - Disk Space Usage of File Systems . df displays the amount of disk space used and available on Linux file systems. df -h . free - Memory Usage . This command gives you a summary of the memory usage in your system. free -m . ",
    "url": "/Lucian/handy-commands-for-red-hat-centos#2-system-information-commands",
    
    "relUrl": "/Lucian/handy-commands-for-red-hat-centos#2-system-information-commands"
  },"76": {
    "doc": "handy-commands-for-red-hat-centos",
    "title": "3. Package Management with YUM",
    "content": "yum install - Install a Package . Use yum install followed by the package name to install a new package. sudo yum install packageName . yum remove - Remove a Package . To remove an installed package, use yum remove followed by the package name. sudo yum remove packageName . yum update - Update System Packages . To update all the system packages to their latest versions, just type yum update. sudo yum update . yum search - Search for a Package . If you need to find a package in the repositories, use yum search. yum search packageName . ",
    "url": "/Lucian/handy-commands-for-red-hat-centos#3-package-management-with-yum",
    
    "relUrl": "/Lucian/handy-commands-for-red-hat-centos#3-package-management-with-yum"
  },"77": {
    "doc": "handy-commands-for-red-hat-centos",
    "title": "4. Network-related Commands",
    "content": "ping - Send ICMP ECHO_REQUEST to Network Hosts . You can check your connectivity to a network host using ping. ping host . ifconfig or ip - Display or Configure a Network Interface . Use ifconfig or ip to configure, control, and query TCP/IP network interface parameters. ifconfig ip addr . netstat - Network Statistics . netstat provides a variety of information about network connections. netstat . ssh - OpenSSH Remote Login Client . ssh command is used for logging into a remote machine and for executing commands on a remote machine. ssh username@hostname . The above commands are just the tip of the iceberg when it comes to managing and navigating a CentOS system, but they’re a good starting point for both beginners and experienced users alike. Don’t hesitate to explore the man pages for any command you’re interested in, as it provides in-depth information about usage, options, and examples. ",
    "url": "/Lucian/handy-commands-for-red-hat-centos#4-network-related-commands",
    
    "relUrl": "/Lucian/handy-commands-for-red-hat-centos#4-network-related-commands"
  },"78": {
    "doc": "handy-commands-for-red-hat-centos",
    "title": "handy-commands-for-red-hat-centos",
    "content": "When working with Red Hat CentOS, it’s essential to become familiar with the terminal and the wide range of commands that you can use to navigate, modify, and manage your Linux system. In this article, we’re going to explore some of the most useful commands that will aid your CentOS journey. ",
    "url": "/Lucian/handy-commands-for-red-hat-centos",
    
    "relUrl": "/Lucian/handy-commands-for-red-hat-centos"
  },"79": {
    "doc": "i10TWS-problème-de-synchronisation",
    "title": "i10TWS-problème-de-synchronisation",
    "content": "Vos écouteurs i10 TWS ne sont plus synchronisés entre eux, vous ne pouvez connecter qu’un seul écouteur à la fois !? . Alors voilà la démarche a suivre pour resynchroniser les 2 écouteur bluetooth entre eux. 1) Déconnectez les écouteur de tout appareil auquel ils sont jumelés, coupez également le bluetooth des appareils à proximité.  (Cela vous évitera certains problèmes) . 2) Placez-les dans la boîte de charge et fermer. 3) Retirez l’écouteur gauche de la boite (il devrait dire “power on”), toucher le bouton tactile 5 fois de suite (il devrait alors dire “fell off”). 4) Sortez l’écouteur droite de la boîte, (il devrait dire “power on”), toucher le bouton tactile 5 fois de suite (il devrait alors dire “fell off”). 5) Remettez les deux écouteur dans la boîte et fermez la pendant 4 secondes, puis sortez les de la boite. 6) Les deux écouteurs devraient dire (“power on”, “dualearbuds had been connected successfully”) . ",
    "url": "/Medaey/i10TWS-probl%C3%A8me-de-synchronisation",
    
    "relUrl": "/Medaey/i10TWS-problème-de-synchronisation"
  },"80": {
    "doc": "Medaey",
    "title": "Medaey",
    "content": " ",
    "url": "/medaey",
    
    "relUrl": "/medaey"
  },"81": {
    "doc": "Lucian",
    "title": "Lucian",
    "content": " ",
    "url": "/Lucian",
    
    "relUrl": "/Lucian"
  },"82": {
    "doc": "Accueil",
    "title": "Bienvenue sur Admindoc",
    "content": "Ici, vous trouverez une vaste collection de ressources, guides, tutoriels à destination des professionnels de l’informatique. Que vous soyez administrateur système, développeur, ou simplement curieux en quête de connaissances, explorez notre bibliothèque et profitez d’un accès facile aux informations nécessaires pour exceller dans votre domaine. Rejoignez-nous sur GitHub et plongez dans un océan de connaissances informatiques à portée de clic. ",
    "url": "/#bienvenue-sur-admindoc",
    
    "relUrl": "/#bienvenue-sur-admindoc"
  },"83": {
    "doc": "Accueil",
    "title": "Accueil",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"84": {
    "doc": "introduction-to-as400-setting-up-and-basic-commands",
    "title": "Setting up AS400",
    "content": "Setting up an AS400 environment involves several steps. Here’s a general outline of the process: . | Hardware: Acquire an AS400 server or an IBM i-compatible machine. Ensure that it meets the necessary hardware requirements for your workload. | Operating System: Install the IBM i operating system on the AS400 machine. This can be done using the IBM i installation media or by using virtualization software such as IBM PowerVM. | Networking: Configure the network settings for your AS400. This includes assigning IP addresses, setting up DNS, and configuring network interfaces. | Security: Establish proper security measures for your AS400 environment. This may involve setting up user accounts, configuring access controls, and enabling security features such as SSL/TLS. | Software Installation: Install additional software and applications on your AS400 system as per your requirements. IBM i supports a wide range of applications, including ERP systems, databases, and development tools. | . Once your AS400 environment is set up, you can start using it by accessing the command line interface. ",
    "url": "/Lucian/introduction-to-as400-setting-up-and-basic-commands#setting-up-as400",
    
    "relUrl": "/Lucian/introduction-to-as400-setting-up-and-basic-commands#setting-up-as400"
  },"85": {
    "doc": "introduction-to-as400-setting-up-and-basic-commands",
    "title": "Basic AS400 Commands",
    "content": "The command line interface in AS400, commonly referred to as the “green screen,” provides a powerful way to interact with the system. Here are some basic commands to help you get started: . | WRKSYSSTS: This command displays the system status, including CPU usage, memory utilization, and active jobs. It provides a snapshot of the overall system health. | . WRKSYSSTS . | WRKACTJOB: Use this command to view the active jobs on the system. It displays information such as job name, user, CPU usage, and status. | . WRKACTJOB . | DSPJOBLOG: This command allows you to view the job log for a specific job or the entire system. The job log contains information about job-related events, messages, and errors. | . DSPJOBLOG JOB(jobname) . | WRKOBJ: Use this command to work with objects on the system, such as libraries, files, or programs. It provides options to create, delete, or modify objects. | . WRKOBJ OBJ(libraryname/objectname) OBJTYPE(*ALL) . | CRTLIB: This command creates a new library on the system. Libraries are used to organize objects and provide a logical grouping. | . CRTLIB LIB(libraryname) . | CHGLIB: Use this command to modify the attributes of an existing library, such as the text description or the library’s authority. | . CHGLIB LIB(libraryname) TEXT('New description') . | DSPLIB: This command displays information about a specific library, including its objects, size, and attributes. | . DSPLIB LIB(libraryname) . | WRKUSRJOB: This command displays information about user jobs. It provides details such as job name, user, job status, CPU usage, and memory utilization. | . WRKUSRJOB USER(username) . | WRKSPLF: Use this command to work with spooled files. Spooled files are used to store printer output or other generated reports. This command allows you to view, hold, release, or delete spooled files. | . WRKSPLF . | WRKJOBSCDE: This command displays information about jobs scheduled to run at specific times. It provides details such as job name, schedule time, job status, and command to be executed. | . WRKJOBSCDE . | GO CMD: This command allows you to navigate to a specific command on the system. It opens a menu that lists different commands, and you can choose the desired command to execute. | . GO CMD . | CHGJOB: Use this command to change the attributes of a specific job, such as the job priority, job queue, or time slice. | . CHGJOB JOB(jobname) PRTTXT('New priority') . | CPYTOIMPF: This command copies data from a physical file to an IFS (Integrated File System) file. It is useful for exporting data in a format that can be easily accessed by other applications. | . CPYTOIMPF FROMFILE(libraryname/filename) TOSTMF('/path/to/output.csv') MBROPT(*REPLACE) STMFCODPAG(*PCASCII) . | DSPF: This command displays the contents of a physical file. It allows you to view and navigate through the records of the file. | . DSPF FILE(libraryname/filename) . | WRKCFGSTS: Use this command to display the configuration status of various system components, such as network interfaces, disk units, or tape drives. | . WRKCFGSTS CFGTYPE(*DEV) CFGD(DEVICENAME) . | SAVSYS: This command initiates a system save, which creates a backup of the entire system. It is used for disaster recovery and system migration purposes. | . SAVSYS DEV(TAP01) ENDOPT(*LEAVE) . | DSPMSGD: This command displays detailed information about a specific message ID. It provides the message text, severity level, and possible causes or actions. | . DSPMSGD MSGID(messageid) . These are just a few examples of the basic commands available in AS400. The system offers a wide range of commands to manage objects, jobs, printers, and more. You can explore the AS400 documentation for a comprehensive list of commands and their usages. ",
    "url": "/Lucian/introduction-to-as400-setting-up-and-basic-commands#basic-as400-commands",
    
    "relUrl": "/Lucian/introduction-to-as400-setting-up-and-basic-commands#basic-as400-commands"
  },"86": {
    "doc": "introduction-to-as400-setting-up-and-basic-commands",
    "title": "Conclusion",
    "content": "AS400, now known as IBM i, is a powerful and reliable computer system that has been widely adopted by businesses. In this article, we discussed the process of setting up an AS400 environment and explored some basic commands to get you started. As you become more familiar with the platform, you’ll discover its rich features and capabilities, allowing you to leverage its strength in managing and running critical business applications. ",
    "url": "/Lucian/introduction-to-as400-setting-up-and-basic-commands#conclusion",
    
    "relUrl": "/Lucian/introduction-to-as400-setting-up-and-basic-commands#conclusion"
  },"87": {
    "doc": "introduction-to-as400-setting-up-and-basic-commands",
    "title": "introduction-to-as400-setting-up-and-basic-commands",
    "content": "The AS400, now known as IBM i, is a mid-range computer system developed by IBM. It is known for its reliability, security, and scalability, making it a popular choice for businesses that require a robust and stable platform. In this article, we will explore how to set up an AS400 environment and learn some basic commands to get you started. ",
    "url": "/Lucian/introduction-to-as400-setting-up-and-basic-commands",
    
    "relUrl": "/Lucian/introduction-to-as400-setting-up-and-basic-commands"
  },"88": {
    "doc": "introduction-to-data-types",
    "title": "1. Numeric Data Types",
    "content": "Python provides several numeric data types to represent numbers, including integers, floating-point numbers, and complex numbers. 1.1 Integers (int) . Integers are whole numbers without any fractional parts. They can be positive, negative, or zero. In Python, integers are represented by the int data type. Here’s an example: . # Integer assignment my_integer = 42 . 1.2 Floating-Point Numbers (float) . Floating-point numbers, or floats, are numbers that contain a decimal point. They can represent both whole and fractional numbers. In Python, floating-point numbers are represented by the float data type. Here’s an example: . # Floating-point assignment my_float = 3.14 . 1.3 Complex Numbers (complex) . Complex numbers consist of a real part and an imaginary part, represented as a + bj, where a is the real part, b is the imaginary part, and j is the square root of -1. In Python, complex numbers are represented by the complex data type. Here’s an example: . # Complex number assignment my_complex = 2 + 3j . ",
    "url": "/Lucian/introduction-to-data-types#1-numeric-data-types",
    
    "relUrl": "/Lucian/introduction-to-data-types#1-numeric-data-types"
  },"89": {
    "doc": "introduction-to-data-types",
    "title": "2. Textual Data Types",
    "content": "Textual data types are used to represent strings of characters, such as words, sentences, or even entire documents. 2.1 Strings (str) . Strings are sequences of characters enclosed in single quotes (') or double quotes (\"). They can be used to represent text or any other sequence of characters. In Python, strings are represented by the str data type. Here’s an example: . # String assignment my_string = \"Hello, World!\" . ",
    "url": "/Lucian/introduction-to-data-types#2-textual-data-types",
    
    "relUrl": "/Lucian/introduction-to-data-types#2-textual-data-types"
  },"90": {
    "doc": "introduction-to-data-types",
    "title": "3. Boolean Data Type",
    "content": "The Boolean data type represents truth values, which can be either True or False. Booleans are primarily used in logical operations and conditional statements. 3.1 Boolean (bool) . Boolean values can be either True or False. In Python, the Boolean data type is represented by the bool class. Here’s an example: . # Boolean assignment my_boolean = True . ",
    "url": "/Lucian/introduction-to-data-types#3-boolean-data-type",
    
    "relUrl": "/Lucian/introduction-to-data-types#3-boolean-data-type"
  },"91": {
    "doc": "introduction-to-data-types",
    "title": "4. Sequence Data Types",
    "content": "Sequence data types are used to represent ordered collections of items. 4.1 Lists (list) . Lists are ordered and mutable collections of items. They can contain elements of different data types and are represented by square brackets ([]). Here’s an example: . # List assignment my_list = [1, 2, 3, 'four', 5.0] . 4.2 Tuples (tuple) . Tuples are ordered and immutable collections of items. They are similar to lists but cannot be modified once created. Tuples are represented by parentheses (()). Here’s an example: . # Tuple assignment my_tuple = (1, 2, 3, 'four', 5.0) . 4.3 Range (range) . The range data type represents an immutable sequence of numbers and is commonly used in loops and iterations. It is defined by specifying the start, stop, and step values. Here’s an example: . # Range assignment my_range = range(1, 10, 2) . ",
    "url": "/Lucian/introduction-to-data-types#4-sequence-data-types",
    
    "relUrl": "/Lucian/introduction-to-data-types#4-sequence-data-types"
  },"92": {
    "doc": "introduction-to-data-types",
    "title": "Conclusion",
    "content": "Understanding the various data types available in Python is crucial for writing effective and robust programs. In this blog post, we covered numeric data types (integers, floating-point numbers, complex numbers), textual data types (strings), boolean data types (booleans), and sequence data types (lists, tuples, range). Familiarizing yourself with these data types will allow you to manipulate and process different kinds of information in your Python programs. Remember, Python is a dynamically typed language, meaning that you don’t need to explicitly declare the data type of a variable. The interpreter infers the type based on the assigned value. This flexibility makes Python a beginner-friendly language for data manipulation and analysis. Now that you have a solid understanding of Python’s data types, you can start exploring more advanced topics and building powerful applications. Happy coding! . ",
    "url": "/Lucian/introduction-to-data-types#conclusion",
    
    "relUrl": "/Lucian/introduction-to-data-types#conclusion"
  },"93": {
    "doc": "introduction-to-data-types",
    "title": "introduction-to-data-types",
    "content": "Python is a versatile and powerful programming language that offers a wide range of built-in data types. Understanding these data types is essential for every beginner Python developer, as they form the foundation of any program. In this blog post, we will explore the commonly used data types in Python and discuss their characteristics and usage. ",
    "url": "/Lucian/introduction-to-data-types",
    
    "relUrl": "/Lucian/introduction-to-data-types"
  },"94": {
    "doc": "introduction-to-data",
    "title": "What is Data?",
    "content": "At its most basic, data can be defined as distinct pieces of information, usually formatted in a special way and often structured in databases. It can be numerical, textual, visual or auditory, and it comes in various forms such as numbers, text, images, audio, and more. Data can be structured or unstructured. Structured data is organized in a specific manner or model, often in tabular form like a spreadsheet where data is divided into columns and rows. Each column represents a particular variable, and each row corresponds to a given value of those variables. Examples of structured data include relational databases and Excel spreadsheets. Unstructured data, on the other hand, doesn’t have a predefined model or organization. This kind of data is typically text-heavy and includes data types like e-books, manuscripts, and social media posts. These forms of data are more complex to process and analyze because they aren’t easily categorized into conventional variables. But regardless of its form, data is valuable because it represents the world around us. It’s a snapshot of reality, digitized. It’s a numerical reflection of the events, characteristics, and traits that define our existence. ",
    "url": "/Lucian/introduction-to-data#what-is-data",
    
    "relUrl": "/Lucian/introduction-to-data#what-is-data"
  },"95": {
    "doc": "introduction-to-data",
    "title": "Why is Data Important?",
    "content": "Data is like the lifeblood of the digital age. It flows through every system, every process, and every interaction. And just like blood, it nourishes and supports. It informs decisions, drives our actions, and essentially, makes the digital world go round. When we understand data, we understand the world. Data drives scientific discovery and innovation. It forms the backbone of modern healthcare, where it’s used to predict disease outbreaks and improve patient care. It powers machine learning algorithms and artificial intelligence, technologies that are reshaping every sector of the economy. In the business world, data has become a crucial asset. Businesses use data to understand their customers, optimize their operations, and drive profitability. In fact, we’re now in an era of ‘big data’, where companies are processing enormous amounts of information to gain competitive advantages. ",
    "url": "/Lucian/introduction-to-data#why-is-data-important",
    
    "relUrl": "/Lucian/introduction-to-data#why-is-data-important"
  },"96": {
    "doc": "introduction-to-data",
    "title": "How Do We Use Data?",
    "content": "Data is used in a multitude of ways across various fields. In science, data from experiments and observations are used to test hypotheses and build theories. In economics, data on income, expenditure, and market trends are used to understand and predict economic behavior. In technology, data is used in algorithms that power search engines, recommend music or movies, and even drive autonomous vehicles. In medicine, data from patient records and clinical trials are used to improve patient care and develop new treatments. The important thing is not just collecting data, but turning it into valuable insights through analysis. This is often done through a process called data analytics, where data is cleaned, inspected, transformed, and modeled to discover useful information, draw conclusions, and support decision-making. In summary, data is an essential part of our lives. Understanding it and knowing how to use it effectively is crucial in our increasingly data-driven world. From guiding business strategies to driving scientific discovery, data is not only shaping our present but is also paving the way for our future. ",
    "url": "/Lucian/introduction-to-data#how-do-we-use-data",
    
    "relUrl": "/Lucian/introduction-to-data#how-do-we-use-data"
  },"97": {
    "doc": "introduction-to-data",
    "title": "introduction-to-data",
    "content": "Data is everywhere. It’s not just the binary digits that our computers process, but the information that powers our lives. It’s in the music we listen to, the movies we watch, the books we read, and even the daily weather forecasts we check before we leave the house in the morning. Data is so intertwined with our lives that sometimes, we forget it’s there. To understand the importance of data, let’s first delve into what data actually is. ",
    "url": "/Lucian/introduction-to-data",
    
    "relUrl": "/Lucian/introduction-to-data"
  },"98": {
    "doc": "ipDynamiqueWindows",
    "title": "ipDynamiqueWindows",
    "content": "1) Ouvrir une invitation de commandes en tant qu’administrateur: . 2) Lister les interfaces réseau: . netsh int show int . Normalement l’interface réseau utilisée par défaut se nomme “Connexion au réseau local”. Pour avoir plus de détails sur vos interfaces réseau: . netsh interface ip show config . 3) Passer l’interface réseau en DHCP: . netsh int ip set address “Connexion au réseau local” dhcp . Remplacer “Connexion au réseau local” par le nom de votre la carte réseau. microsoft.com . ",
    "url": "/Medaey/ipDynamiqueWindows",
    
    "relUrl": "/Medaey/ipDynamiqueWindows"
  },"99": {
    "doc": "ipv6",
    "title": "I Présentation",
    "content": "ipv6 est le successeur du protocole ipv4, celui-ci dispose d’un espace d’adressage bien plus important, afin de répondre à la forte demande d’adresse suite la démocratisation d’internet. Pourquoi désactiver cet adressage ? Pour une question de simplicité, car quand une adresse ipv4 ressemble à ceci 192.168.1.24/24 une adresse ipv6 ressemble à 2a01:cb08:918:5000:a00:27ff:fe6d:de9d/64. Une est plus rapide à saisir, je vous l’aisse deviner laquelle. ",
    "url": "/Medaey/ipv6#i-pr%C3%A9sentation",
    
    "relUrl": "/Medaey/ipv6#i-présentation"
  },"100": {
    "doc": "ipv6",
    "title": "II Désactiver l’adressage ip version 6",
    "content": "Pour désactiver ce protocole sous debian 11 je vais modifier le fichier /etc/sysctl.conf et y rajouter la ligne . net.ipv6.conf.all.disable_ipv6 = 1 . ℹ️ Il est possible de désactiver l’ipv6 sur une seule interface par exemple uniquement pour enp0s3 . net.ipv6.conf.enp0s3.disable_ipv6 = 1 . Enfin il suffira d’appliquer les modifications . sudo sysctl -p . Pour s’assurer que la modification est bien effective rien de mieux qu’une vérification à l’œil en affichent les adresses avec la commande ip a. 📝https://www.memoinfo.fr/tutoriels-linux/desactiver-ipv6-sur-debian/ 📝https://www.itzgeek.com/how-tos/linux/debian/how-to-disable-ipv6-on-debian-9-ubuntu-16-04.html 📝https://fr.wikipedia.org/wiki/IPv6 . ",
    "url": "/Medaey/ipv6#ii-d%C3%A9sactiver-ladressage-ip-version-6",
    
    "relUrl": "/Medaey/ipv6#ii-désactiver-ladressage-ip-version-6"
  },"101": {
    "doc": "ipv6",
    "title": "ipv6",
    "content": "[TOC] . ⏩ Tu n’a pas le temps ? Fait un copier-coller du texte ci-dessous :smile: . Debian 11 . sudo bash -c \"echo 'net.ipv6.conf.all.disable_ipv6 = 1' &gt;&gt; /etc/sysctl.conf\" &amp;&amp; sudo sysctl -p &amp;&amp; ip a . ",
    "url": "/Medaey/ipv6",
    
    "relUrl": "/Medaey/ipv6"
  },"102": {
    "doc": "lamp",
    "title": "I Présentation",
    "content": "Au fait, c’est quoi un serveur LAMP ? . L’acronyme LAMP désigne un ensemble de quatre technologies open source : . | L pour Linux, le système d’exploitation (Debian, dans notre cas) . | A pour Apache, le serveur Web . | M pour MySQL/MariaDB le système de gestion de bases de données . | P pour PHP, le langage de programmation PHP . | . Un serveur LAMP est donc un serveur qui dispose de ces 4 composants. Ce type de serveur est très utilisé dans le monde du web par exemple WordPress à besoin d’un serveur LAMP pour son bon fonctionnement. ",
    "url": "/Medaey/lamp#i-pr%C3%A9sentation",
    
    "relUrl": "/Medaey/lamp#i-présentation"
  },"103": {
    "doc": "lamp",
    "title": "II Apache 2",
    "content": "Je commence par mettre à jour les paquets : . sudo apt upodate -y &amp;&amp; sudo apt upgrade -y . Puis j’installe le paquet apache 2 . sudo apt-get install -y apache2 . Ensuite il faut démarrer le service apache2 et le rajouter au démarrage histoire de ne pas à devoir relancer le service manuellement après chaque redémarrage du serveur. sudo systemctl restart apache2 &amp;&amp; sudo systemctl enable apache2 . À ce stade le serveur web apache 2 devrait être opérationnel, je vais vérifier cela avec la commande . sudo systemctl status apache2 . ● apache2.service - The Apache HTTP Server Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled) Active: active (running) since Tue 2022-04-05 20:52:28 CEST; 37min ago Docs: https://httpd.apache.org/docs/2.4/ Main PID: 822 (apache2) Tasks: 55 (limit: 1156) Memory: 11.3M CPU: 139ms CGroup: /system.slice/apache2.service ├─822 /usr/sbin/apache2 -k start ├─824 /usr/sbin/apache2 -k start └─825 /usr/sbin/apache2 -k start . avril 05 20:52:28 Lab-01 systemd[1]: Starting The Apache HTTP Server… avril 05 20:52:28 Lab-01 apachectl[821]: AH00558: apache2: Could not reliably determine the server’s fully qualified do&gt; avril 05 20:52:28 Lab-01 systemd[1]: Started The Apache HTTP Server. Je vérifie également la version installé . sudo apache2ctl -v . Server version: Apache/2.4.53 (Debian) Server built: 2022-03-14T16:28:35 . Dans mon cas c’est la version 2.4.53 qui a été installé. Je vais également consulter le serveur avec un navigateur web par exemple Mozilla Firefox, déjà il faut récupérer l’adresse IP du serveur pour pouvoir y accéder en http. ip a . 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 08:00:27:ce:2a:8e brd ff:ff:ff:ff:ff:ff inet 192.168.1.100/24 brd 192.168.1.255 scope global enp0s3 valid_lft forever preferred_lft forever inet6 2a01:e0a:4df:bc20:a00:27ff:fece:2a8e/64 scope global dynamic mngtmpaddr valid_lft 86115sec preferred_lft 86115sec inet6 fe80::a00:27ff:fece:2a8e/64 scope link valid_lft forever preferred_lft forever . En consultant l’adresse IP du serveur, je devrais tomber sur la page par défaut d’apache2. Parfait Apache 2 c’est fini . ",
    "url": "/Medaey/lamp#ii-apache-2",
    
    "relUrl": "/Medaey/lamp#ii-apache-2"
  },"104": {
    "doc": "lamp",
    "title": "III PHP",
    "content": "Au tour du PHP, donc installation du paquet . sudo apt install -y php . Puis vérification de la version qui vient d’être installée . php -v . PHP 7.4.28 (cli) (built: Feb 17 2022 16:17:19) ( NTS ) Copyright (c) The PHP Group Zend Engine v3.4.0, Copyright (c) Zend Technologies with Zend OPcache v7.4.28, Copyright (c), by Zend Technologies . La version 7.4.28 est installé je vais vérifier cela en créant une page web avec du code PHP pour être sûr ! . sudo nano /var/www/html/phpinfo.php . ce fichier phpinfo.php contiendra les 3 lignes ci-dessous . &lt;?php phpinfo(); ?&gt; . Maintenant je retourne consulter le serveur en web à la différence que je rajoute /phpinfo.php après l’adresse IP pour consulter le fichier fraichement crée. OK PHP à bien interprété car le code à crée cette magnifique page. ",
    "url": "/Medaey/lamp#iii-php",
    
    "relUrl": "/Medaey/lamp#iii-php"
  },"105": {
    "doc": "lamp",
    "title": "IV Mysql/Mariadb",
    "content": "Pour finir le système de gestion de bases de données j’opte pour Mariadb qui est “Une copie Open Source” de Mysql, donc toujours pareille installation du paquet qui va bien. sudo apt install -y mariadb-server . une fois l’installation fini, je vérifi l’installation . sudo mysql . Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 31 Server version: 10.5.15-MariaDB-0+deb11u1 Debian 11 . Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type ‘help;’ or ‘\\h’ for help. Type ‘ . ",
    "url": "/Medaey/lamp#iv-mysqlmariadb",
    
    "relUrl": "/Medaey/lamp#iv-mysqlmariadb"
  },"106": {
    "doc": "lamp",
    "title": "lamp",
    "content": "[TOC] . ⏩ Tu n’a pas le temps ? Fait un copier-coller du texte ci-dessous :smile: . Debian 11 . sudo apt update -y &amp;&amp; sudo apt upgrade -y; sudo apt-get install apache2 -y &amp;&amp; sudo systemctl restart apache2 &amp;&amp; sudo systemctl enable apache2; sudo apt-get install -y php; sudo apt-get install -y mariadb-server &amp;&amp; sudo systemctl restart mariadb &amp;&amp; sudo systemctl enable mariadb &amp;&amp; sudo bash -c 'echo \"&lt;\\?php\" &gt;&gt; /var/www/html/phpinfo.php' &amp;&amp; sudo bash -c 'echo \"phpinfo();\" &gt;&gt; /var/www/html/phpinfo.php' &amp;&amp; sudo bash -c 'echo \"?&gt;\" &gt;&gt; /var/www/html/phpinfo.php' . ",
    "url": "/Medaey/lamp",
    
    "relUrl": "/Medaey/lamp"
  },"107": {
    "doc": "logical-volume-management-lvm-in-red-hat-centos",
    "title": "Creating a Logical Volume",
    "content": "The first step to creating a Logical Volume (LV) is to create a Physical Volume (PV) and then a Volume Group (VG). | Create a Physical Volume: | . sudo pvcreate /dev/sdb1 . | Create a Volume Group: | . sudo vgcreate myvg /dev/sdb1 . | Create a Logical Volume: | . sudo lvcreate -L 10G -n mylv myvg . The -L option specifies the size of the LV, and -n specifies the name. The myvg at the end is the name of the VG that the LV belongs to. ",
    "url": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#creating-a-logical-volume",
    
    "relUrl": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#creating-a-logical-volume"
  },"108": {
    "doc": "logical-volume-management-lvm-in-red-hat-centos",
    "title": "Extending a Logical Volume",
    "content": "If you find that you need more space on your LV, you can extend and --resizefs it with the following command: . sudo lvextend -r -L+5G /dev/myvg/mylv . This command increases the size of the logical volume by 5GB. Old technic to resize the filesystem after extending the logical volume: . sudo resize2fs /dev/myvg/mylv . ",
    "url": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#extending-a-logical-volume",
    
    "relUrl": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#extending-a-logical-volume"
  },"109": {
    "doc": "logical-volume-management-lvm-in-red-hat-centos",
    "title": "Reducing a Logical Volume",
    "content": "Before reducing the size of a logical volume, we need to reduce the filesystem first: . sudo resize2fs /dev/myvg/mylv 10G . Then reduce the size of the LV: . sudo lvreduce -L 10G /dev/myvg/mylv . This reduces the size of the logical volume to 10GB. Be cautious with this operation as it can lead to data loss if not handled properly. ",
    "url": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#reducing-a-logical-volume",
    
    "relUrl": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#reducing-a-logical-volume"
  },"110": {
    "doc": "logical-volume-management-lvm-in-red-hat-centos",
    "title": "Removing a Logical Volume",
    "content": "You can remove a logical volume with the lvremove command: . sudo lvremove /dev/myvg/mylv . You’ll be asked to confirm the operation because it will destroy all data in the logical volume. ",
    "url": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#removing-a-logical-volume",
    
    "relUrl": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#removing-a-logical-volume"
  },"111": {
    "doc": "logical-volume-management-lvm-in-red-hat-centos",
    "title": "Checking Information about Partitions and Volume Groups",
    "content": "The pvs, vgs, and lvs commands display information about physical volumes, volume groups, and logical volumes, respectively. sudo pvs sudo vgs sudo lvs . The pvdisplay, vgdisplay, and lvdisplay commands provide more detailed information: . sudo pvdisplay sudo vgdisplay sudo lvdisplay . These commands are essential for managing and understanding your LVM setup. Logical Volume Management is a powerful tool in Linux. It provides a higher-level view of the disk storage on a computer system than the traditional view of disks and partitions. This flexibility is beneficial for system administrators who need to manage storage more effectively. It’s recommended to practice these commands and concepts in a safe environment to understand their potential fully. ",
    "url": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#checking-information-about-partitions-and-volume-groups",
    
    "relUrl": "/Lucian/logical-volume-management-lvm-in-red-hat-centos#checking-information-about-partitions-and-volume-groups"
  },"112": {
    "doc": "logical-volume-management-lvm-in-red-hat-centos",
    "title": "logical-volume-management-lvm-in-red-hat-centos",
    "content": "Logical Volume Management (LVM) is a device mapper target that provides logical volume management for the Linux kernel. It is a powerful and flexible system that allows you to manage your disk space more efficiently. In this article, we will discuss how to create logical volumes, extend and reduce their sizes, remove them, and check detailed information about the various partitions and volume groups. ",
    "url": "/Lucian/logical-volume-management-lvm-in-red-hat-centos",
    
    "relUrl": "/Lucian/logical-volume-management-lvm-in-red-hat-centos"
  },"113": {
    "doc": "mail",
    "title": "Mise en place d’un serveur de messagerie électronique.",
    "content": "Un serveur de messagerie électronique est un logiciel serveur de courrier électronique. Il a pour vocation de transférer les messages électroniques d’un serveur à un autre. Un utilisateur n’est jamais en contact direct avec ce serveur, mais utilise soit un client de messagerie installé sur son ordinateur ou smartphone, soit une messagerie web (Webmail), qui se charge de contacter le serveur pour envoyer ou recevoir les messages. On parle dans le premier cas de client lourd, dans le deuxième cas de client léger. ",
    "url": "/Medaey/mail#mise-en-place-dun-serveur-de-messagerie-%C3%A9lectronique",
    
    "relUrl": "/Medaey/mail#mise-en-place-dun-serveur-de-messagerie-électronique"
  },"114": {
    "doc": "mail",
    "title": "DNS",
    "content": "Pour le fonctionnement de toute cette infrastructure, il va falloir disposer d’un serveur DNS ! Je vais donc procéder à la création d’une zone DNS locale avec l’outil Bind9 assisté par Ansible histoire de pouvoir prendre un ☕ le temps que la zone DNS s’installe. Dans un premier temps je téléchargement mes rôles Ansible qui sont stockés sur GitHub. git clone https://github.com/medaey/role-ansible.git . J’ouvre le répertoire avec Visual Studio Code pour avoir une vue des fichiers et un terminal à disposition dans la même fenêtre. Puis j’édite le fichier hosts pour y ajouter la machine que je veux impacter à savoir Lab-01 et enfin je la rajoute au groupe [bind9] . Au tour du fichier /bind9/vars/main.yml qui contient les variables du rôle Ansible bind9, c’est le plus important, car Ansible va utiliser ces variables pour générer les fichiers de configuration ⚠️ . dnsName = Nom de domaine local qui va être configuré forwardDns = Le serveur DNS qui va récupérer les requêtes que notre DNS ne gère pas, par défaut c’est le DNS de Google 8.8.8.8 . Maintenant j’exécute le rôle Ansible et je pars prendre mon ☕. ansible-playbook bind9.yml -i hosts . Alors Ansible dit qu’il a fait 10 changements est que tout est OK pour lui. Bon je vais tout de même faire une vérification. Donc connexion en ssh sur le serveur. ssh toor@192.168.1.100 . et je veux savoir quel serveur répond aux requêtes dns dedns.cossu.lan . nslookup dns.cossu.lan . Server: 192.168.1.100 Address: 192.168.1.100#53 . Name: dns.cossu.lan Address: 192.168.1.100 . OK c’est bien notre serveur DNS 192.168.1.100 qui nous répond ! . Maintenant au tour d’un nom qui n’est pas dans notre zone locale pour tester le forwarddns. nslookup irp.nain-t.net . Server: 192.168.1.100 Address: 192.168.1.100#53 . Non-authoritative answer: irp.nain-t.net canonical name = vps.nain-t.net. Name: vps.nain-t.net Address: 51.68.121.59 Name: vps.nain-t.net Address: 2001:41d0:305:2100::2cd5 . Alors le serveur 192.168.1.100 dit que irp.nain-t.net = 51.68.121.59 la résolution de nom se fait donc bien pour le nom de domaine externe. BIND est fonctionnel ! . ",
    "url": "/Medaey/mail#dns",
    
    "relUrl": "/Medaey/mail#dns"
  },"115": {
    "doc": "mail",
    "title": "SMTP (MTA)",
    "content": "Maintenant que le serveur DNS est configuré, il est temps de créer le serveur SMTP son travail va être de transmettre les mails c’est un (MTA) par exemple Postfix. Je commande par installer les paquets tree, mailutils, et postfix . sudo apt update -y &amp;&amp; sudo apt upgrade -y &amp;&amp; sudo apt-get install tree mailutils postfix -y . Postfix demande comment il doit être configuré “Site Internet”. Il demande ensuite le nom de domaine qu’il va gérer. Maintenant je vais configurer le MODE du serveur SMTP il en existe 2 : . Mbox : Chaque utilisateur à un gros fichier dans /var/mail qui contient tous ces mails. MailDir : Chaque utilisateur a dans son répertoire /home une arborescence et chaque mail est contenu dans des fichier distin. ℹ️ Le mode Mbox est celui utilisé pas défaut. Je préfère le mode MailDir, pour l’utiliser il faut ajouter la ligne home_mailbox = Maildir/ dans le fichier de configuration /etc/postfix/main.cf . sudo bash -c 'echo \"home_mailbox = Maildir/\" &gt;&gt; /etc/postfix/main.cf' . Maintenant c’est l’heure des test, donc je crée un utilisateur, par exemple toto. sudo adduser toto . je lui envoie un message à l’aide d’un client Mail (MUA) . mail toto . Cc: Subject: Wow un mail Coucou Toto Si tu vois ce mail, c’est que le serveur SMTP est opérationnel . Pour finir l’écriture du mail CTRL + D et je me connecte en tant que toto. su - toto . Puis je liste tous les dossiers &amp; fichier présent dans le /home de toto avec la commande tree . Tien il y a un fichier dans Maildir/new soyons curieux et regardons sont contenu. cat Maildir/new/1648241583.V801I255cM57140.cossu.lan . Return-Path: root@cossu.lan X-Original-To: toto@cossu.lan Delivered-To: toto@cossu.lan Received: by cossu.lan (Postfix, from userid 0) id 0B23F5F31C; Fri, 25 Mar 2022 21:53:03 +0100 (CET) To: toto@cossu.lan Subject: Wow un mail X-Mailer: mail (GNU Mailutils 3.10) Message-Id: 20220325205303.0B23F5F31C@cossu.lan Date: Fri, 25 Mar 2022 21:53:03 +0100 (CET) From: root root@cossu.lan . Coucou Toto Si tu vois ce mail, c’est que le serveur SMTP est opérationnel . Le MTA à savoir le serveur Postfix qui utilise le protocole SMTP fonctionne 😃 . Il reste à modifier la zone DNS pour y ajouter les requêtes MX et l’ip du serveur smtp. sudo nano /etc/bind/db.cossu.lan . @ IN NS dns.cossu.lan.            IN MX 10 smtp.cossu.lan. dns IN A 192.168.1.100 smtp IN A 192.168.1.100 . Redémarrage du service bind9 pour appliquer les modifications. sudo systemctl restart bind9 . Comme toujours il faut vérifier donc j’envoyer une requête MX au serveur DNS. nslookup -type=mx cossu.lan . Server: 192.168.1.100 Address: 192.168.1.100#53 . cossu.lan mail exchanger = 10 smtp.cossu.lan. C’est fini pour la partie MTA 🤗 . ",
    "url": "/Medaey/mail#smtp-mta",
    
    "relUrl": "/Medaey/mail#smtp-mta"
  },"116": {
    "doc": "mail",
    "title": "IMAP (MDA)",
    "content": "Pour le moment on peut envoyer / lire des mails avec le terminal, mais avec un MUA comment Thunderbird c’est tout de même plus agréable non ? . Donc pour cela il faute choisir entre POP3 ou IMAP : . IMAP me semble le plus adapter, par contre il faut activer le mode MAILdir ça tombe bien c’est déjà le cas 😏 . Donc ces parti installation de courriel-imap . sudo apt install courier-imap -y . Redémarre des services postfix, courier-imap et courier-authdaemon . sudo /etc/init.d/postfix restart &amp;&amp; sudo /etc/init.d/courier-imap restart &amp;&amp; sudo /etc/init.d/courier-authdaemon restart . ⚠️ Sur un ordinateur qui a pour DNS principal 192.168.1.100 je configure le client Thunderbird. Dans mon cas le serveur IMAP est aussi le serveur SMTP, donc je peux utiliser le même nom DNS. . Ha il arrivent bien à se connecter au serveur . Les mails que toto à reçu s’affiche dans Thunderbird ! . Pour être sûr, je renvoi un mail à toto depuis un autre compte UNIX . mail toto . Cc: Subject: Mail a voir sur thunderbird Ho tu consulte ce mail avec thunderbird ? . Le mail arrive bien dans Thunderbird, toto peut lire c’est mail 🤯 . ",
    "url": "/Medaey/mail#imap-mda",
    
    "relUrl": "/Medaey/mail#imap-mda"
  },"117": {
    "doc": "mail",
    "title": "mail",
    "content": "[TOC] . ",
    "url": "/Medaey/mail",
    
    "relUrl": "/Medaey/mail"
  },"118": {
    "doc": "managing-network-interfaces-on-ubuntu",
    "title": "The ip Command",
    "content": "The ip command is a powerful tool for network interface management in Ubuntu. It replaces the deprecated ifconfig command in modern Linux distributions. Start an Interface . To bring up or start a network interface, use the ip link set up command: . sudo ip link set eth0 up . Replace eth0 with the name of your interface. Stop an Interface . To bring down or stop a network interface, use the ip link set down command: . sudo ip link set eth0 down . Replace eth0 with the name of your interface. ",
    "url": "/Lucian/managing-network-interfaces-on-ubuntu#the-ip-command",
    
    "relUrl": "/Lucian/managing-network-interfaces-on-ubuntu#the-ip-command"
  },"119": {
    "doc": "managing-network-interfaces-on-ubuntu",
    "title": "NetworkManager and the nmcli Command",
    "content": "NetworkManager is the default network management tool for Ubuntu, and nmcli is its command-line counterpart. You can use nmcli to manage network connections and interfaces. Start a Connection . To start a network connection, use the nmcli connection up command: . nmcli connection up \"Wired connection 1\" . Replace \"Wired connection 1\" with the name of your connection. Stop a Connection . To stop a network connection, use the nmcli connection down command: . nmcli connection down \"Wired connection 1\" . Replace \"Wired connection 1\" with the name of your connection. Disconnect a Device . To disconnect a device from all connections, use the nmcli device disconnect command: . nmcli device disconnect eth0 . Replace eth0 with the name of your device. ",
    "url": "/Lucian/managing-network-interfaces-on-ubuntu#networkmanager-and-the-nmcli-command",
    
    "relUrl": "/Lucian/managing-network-interfaces-on-ubuntu#networkmanager-and-the-nmcli-command"
  },"120": {
    "doc": "managing-network-interfaces-on-ubuntu",
    "title": "The ifup and ifdown Commands",
    "content": "Although the ifup and ifdown commands are deprecated in favor of the ip command, they are still widely used in Ubuntu. These commands require superuser privileges. Start an Interface . To bring up or start an interface, use the ifup command: . sudo ifup eth0 . Replace eth0 with the name of your interface. Stop an Interface . To bring down or stop an interface, use the ifdown command: . sudo ifdown eth0 . Replace eth0 with the name of your interface. ",
    "url": "/Lucian/managing-network-interfaces-on-ubuntu#the-ifup-and-ifdown-commands",
    
    "relUrl": "/Lucian/managing-network-interfaces-on-ubuntu#the-ifup-and-ifdown-commands"
  },"121": {
    "doc": "managing-network-interfaces-on-ubuntu",
    "title": "The systemctl Command",
    "content": "You can use the systemctl command to start or stop the NetworkManager service itself. This is a more drastic step and will affect all network connections on your system. Start NetworkManager . To start the NetworkManager service, use the systemctl start command: . sudo systemctl start NetworkManager . Stop NetworkManager . To stop the NetworkManager service, use the systemctl stop command: . sudo systemctl stop NetworkManager . ",
    "url": "/Lucian/managing-network-interfaces-on-ubuntu#the-systemctl-command",
    
    "relUrl": "/Lucian/managing-network-interfaces-on-ubuntu#the-systemctl-command"
  },"122": {
    "doc": "managing-network-interfaces-on-ubuntu",
    "title": "Conclusion",
    "content": "Knowing how to manage network interfaces is an essential skill for anyone working with Ubuntu or any other Linux distribution. Whether you prefer to use the ip, nmcli, ifup/ifdown, or systemctl commands, it’s important to understand what each command does and how to use it properly. This knowledge will help you maintain a robust and stable network on your Ubuntu system. ",
    "url": "/Lucian/managing-network-interfaces-on-ubuntu#conclusion",
    
    "relUrl": "/Lucian/managing-network-interfaces-on-ubuntu#conclusion"
  },"123": {
    "doc": "managing-network-interfaces-on-ubuntu",
    "title": "managing-network-interfaces-on-ubuntu",
    "content": "Managing network interfaces is a critical task in networking and system administration. Ubuntu, being one of the most popular Linux distributions, provides several command-line utilities for network interface management. This article will guide you on how to start, stop, or disconnect different interfaces in Ubuntu. ",
    "url": "/Lucian/managing-network-interfaces-on-ubuntu",
    
    "relUrl": "/Lucian/managing-network-interfaces-on-ubuntu"
  },"124": {
    "doc": "mastering-file-manipulation",
    "title": "Creating Files with TOUCH",
    "content": "The touch command is used to create a new, empty file. It’s as simple as specifying the name of the file you wish to create: . touch newfile.txt . This will create a new file named newfile.txt in the current directory. If the file already exists, touch will update the file’s last access and modification timestamps. ",
    "url": "/Lucian/mastering-file-manipulation#creating-files-with-touch",
    
    "relUrl": "/Lucian/mastering-file-manipulation#creating-files-with-touch"
  },"125": {
    "doc": "mastering-file-manipulation",
    "title": "Writing to Files with ECHO and REDIRECTION",
    "content": "echo is used to output text or data, but when used with redirection (&gt;, &gt;&gt;), you can write data to a file. Use &gt; to write data to a file, replacing any existing contents: . echo \"Hello, world!\" &gt; hello.txt . And &gt;&gt; to append data to an existing file: . echo \"Hello, again!\" &gt;&gt; hello.txt . ",
    "url": "/Lucian/mastering-file-manipulation#writing-to-files-with-echo-and-redirection",
    
    "relUrl": "/Lucian/mastering-file-manipulation#writing-to-files-with-echo-and-redirection"
  },"126": {
    "doc": "mastering-file-manipulation",
    "title": "Viewing File Contents with CAT",
    "content": "The cat (short for concatenate) command is used to display the contents of a file. It’s as simple as: . cat hello.txt . This will print the contents of hello.txt to the terminal. ",
    "url": "/Lucian/mastering-file-manipulation#viewing-file-contents-with-cat",
    
    "relUrl": "/Lucian/mastering-file-manipulation#viewing-file-contents-with-cat"
  },"127": {
    "doc": "mastering-file-manipulation",
    "title": "Checking File Type with FILE",
    "content": "The file command is used to determine the type of a file. This can be helpful when you’ve received a file without an extension. Simply run: . file unknownfile . This command will output the type of unknownfile. ",
    "url": "/Lucian/mastering-file-manipulation#checking-file-type-with-file",
    
    "relUrl": "/Lucian/mastering-file-manipulation#checking-file-type-with-file"
  },"128": {
    "doc": "mastering-file-manipulation",
    "title": "Viewing File Details with STAT",
    "content": "The stat command is used to display detailed information about a file, including size, permissions, and timestamps. Run: . stat myfile.txt . And you’ll receive a detailed report about myfile.txt. ",
    "url": "/Lucian/mastering-file-manipulation#viewing-file-details-with-stat",
    
    "relUrl": "/Lucian/mastering-file-manipulation#viewing-file-details-with-stat"
  },"129": {
    "doc": "mastering-file-manipulation",
    "title": "Moving and Renaming Files with MV",
    "content": "The mv command serves two purposes: moving and renaming files. To move a file, specify the source and destination paths: . mv /path/to/source /path/to/destination . To rename a file, you specify the old name and the new name: . mv oldname.txt newname.txt . Remember, if you’re renaming, make sure the destination has the same path as the source, only with a new filename. ",
    "url": "/Lucian/mastering-file-manipulation#moving-and-renaming-files-with-mv",
    
    "relUrl": "/Lucian/mastering-file-manipulation#moving-and-renaming-files-with-mv"
  },"130": {
    "doc": "mastering-file-manipulation",
    "title": "Conclusion",
    "content": "Mastering file manipulation in RHEL involves a combination of several commands, each serving a different purpose. The touch, echo, cat, file, stat, and mv commands each provide a piece of the puzzle. With these commands under your belt, you’ll be well-equipped to create, view, modify, and move files in any Linux environment. Continue to practice and explore these commands as you navigate your RHEL system. Happy file manipulating! . ",
    "url": "/Lucian/mastering-file-manipulation#conclusion",
    
    "relUrl": "/Lucian/mastering-file-manipulation#conclusion"
  },"131": {
    "doc": "mastering-file-manipulation",
    "title": "mastering-file-manipulation",
    "content": "In any operating system, file manipulation is a fundamental skill. Red Hat Enterprise Linux (RHEL) comes with a vast array of tools that allow users to create, view, modify, and move files. This article will explore those tools and provide examples of how to use them. ",
    "url": "/Lucian/mastering-file-manipulation",
    
    "relUrl": "/Lucian/mastering-file-manipulation"
  },"132": {
    "doc": "mastering-git-a-comprehensive-guide-for-beginners-and-experts",
    "title": "Getting Started",
    "content": "First things first, you need to install Git. Most Linux distributions include Git in their standard repositories. To install Git on a Debian-based system like Ubuntu, use: . sudo apt-get install git . For Fedora, CentOS, or RHEL: . sudo dnf install git . ",
    "url": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#getting-started",
    
    "relUrl": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#getting-started"
  },"133": {
    "doc": "mastering-git-a-comprehensive-guide-for-beginners-and-experts",
    "title": "Basic Git Commands",
    "content": "Every journey starts with the first step. Here are some of the most common commands you need to get started with Git. 1. git init . This command initializes a new Git repository in the current directory. git init . 2. git clone . To work with a repository that already exists, you can clone it to your local machine. Replace URL with the URL of the remote repository. git clone URL . 3. git add . This command adds files from your working directory to your staging area. git add filename # adds a specific file git add . # adds all files in the current directory . 4. git commit . To save your changes, you need to commit them. This command saves your changes to the local repository. git commit -m \"commit message\" . 5. git push . The git push command sends your committed changes to a remote repository. git push origin master # pushes changes to the master branch of the remote repository named \"origin\" . 6. git pull . The git pull command fetches changes from a remote repository and merges them into your current branch. git pull origin master # pulls changes from the master branch of the remote repository named \"origin\" . ",
    "url": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#basic-git-commands",
    
    "relUrl": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#basic-git-commands"
  },"134": {
    "doc": "mastering-git-a-comprehensive-guide-for-beginners-and-experts",
    "title": "Intermediate Git Commands",
    "content": "Once you’ve mastered the basics, you can use these intermediate commands to manage your repositories more effectively. 1. git branch . This command lists all the branches in your repository, and highlights the one you’re currently on. git branch . You can also create a new branch using the same command. git branch new-branch-name . 2. git checkout . The git checkout command allows you to switch between different branches and files in your Git repository. git checkout branch-name # switch to an existing branch . You can create a new branch and switch to it using the -b option. git checkout -b new-branch-name . 3. git merge . To combine the changes made in one branch with another, use the git merge command. git merge branch-name . 4. git diff . This command displays conflicts between branches. Before a merge, you can preview the changes that will be made. git diff source-branch target-branch . 5. git stash . You can use the git stash command to temporarily save changes that you don’t want to commit immediately. git stash . You can apply the stashed changes later using git stash apply. git stash apply . ",
    "url": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#intermediate-git-commands",
    
    "relUrl": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#intermediate-git-commands"
  },"135": {
    "doc": "mastering-git-a-comprehensive-guide-for-beginners-and-experts",
    "title": "Advanced Git Commands",
    "content": "For those well-versed in the basics of Git, here are some advanced commands to boost your productivity. 1. git rebase . Rebasing is the process of moving or combining a sequence of commits to a new base commit. It’s an alternative to merge. git rebase branch-name . 2. git bisect . Bisect helps in finding the commit that introduced a bug by using binary search. git bisect start git bisect bad # Current version is bad git bisect good version-number # This is the last 'good' commit . 3. git cherry-pick . This command applies the changes introduced by some existing commits. git cherry-pick commit-hash . 4. git reflog . Reflog stands for reference logs. This command will show you when the tips of branches and other references were updated in the local repository. git reflog . 5. git revert . This command creates a new commit that undoes the changes made in a previous commit. git revert commit-hash . Mastering Git is a journey of continuous learning and exploration. The commands discussed in this guide form the foundation of this journey. As you gain proficiency, you’ll realize that Git is more than just a version control system—it’s a powerful tool to streamline your software development process. Keep experimenting, keep exploring, and let Git and its myriad features guide you on your path to becoming a Git Guru. ",
    "url": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#advanced-git-commands",
    
    "relUrl": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts#advanced-git-commands"
  },"136": {
    "doc": "mastering-git-a-comprehensive-guide-for-beginners-and-experts",
    "title": "mastering-git-a-comprehensive-guide-for-beginners-and-experts",
    "content": "Git, the free and open-source distributed version control system, is at the heart of countless software projects — both large and small. Its functionality and flexibility allow developers to track changes, collaborate seamlessly, and manage complex projects with ease. This guide will provide a comprehensive overview of Git, from basic commands that every beginner should know to advanced features that can boost the productivity of even seasoned experts. ",
    "url": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts",
    
    "relUrl": "/Lucian/mastering-git-a-comprehensive-guide-for-beginners-and-experts"
  },"137": {
    "doc": "mware",
    "title": "Mise à jour du firmware des switches Aruba",
    "content": ". ",
    "url": "/Medaey/mware#mise-%C3%A0-jour-du-firmware-des-switches-aruba",
    
    "relUrl": "/Medaey/mware#mise-à-jour-du-firmware-des-switches-aruba"
  },"138": {
    "doc": "mware",
    "title": "I. Présentation",
    "content": "La mise à jour du firmware des switches Aruba est une étape cruciale pour assurer le bon fonctionnement et la sécurité de votre réseau. Dans cet article, nous vous expliquerons en détail les étapes que j’ai suivie pour effectuer cette mise à jour, en veillant à ce que votre matériel soit à jour et conforme aux normes requises afin d’avoir le matériel nécessaire au remaniement de infrastructure réseau de puiseur centre de formation. ",
    "url": "/Medaey/mware#i-pr%C3%A9sentation",
    
    "relUrl": "/Medaey/mware#i-présentation"
  },"139": {
    "doc": "mware",
    "title": "II. Prérequis",
    "content": "Avant de commencer le processus de mise à jour du firmware, assurez-vous de disposer des éléments suivants : . | Câble console : Vous aurez besoin d’un câble console pour vous connecter au switch et effectuer les configurations nécessaires. | Firmware à jour : Assurez-vous de télécharger la dernière version du firmware depuis le site officiel d’Aruba Networks. Vous pouvez trouver les mises à jour sur https://asp.arubanetworks.com/downloads;search=ya;sort=VERSION_DESC;fileTypes=SOFTWARE;products=Aruba%20Switches. | Serveur TFTP ou SFTP : Créez un serveur TFTP ou SFTP en utilisant des logiciels tels que MobaXterm ou Tftpd. Ce serveur sera utilisé pour le transfert du fichier firmware vers le switch. | . ",
    "url": "/Medaey/mware#ii-pr%C3%A9requis",
    
    "relUrl": "/Medaey/mware#ii-prérequis"
  },"140": {
    "doc": "mware",
    "title": "III Réinitialisation de la configuration",
    "content": "Les switch devant étre réutiliser en production j’ai effectuer un réinitialisation de leur configuration afin de partir sur des basse saine, bien sur si la configuration était a conserver j’aurais effectuer une sauvegarde des la configuration existante : . | Éteignez le switch, puis rallumez-le en maintenant le bouton “clear” enfoncé jusqu’à ce que la LED clignote. Cette étape permet de réinitialiser la configuration du switch aux paramètres par défaut. | . ",
    "url": "/Medaey/mware#iii-r%C3%A9initialisation-de-la-configuration",
    
    "relUrl": "/Medaey/mware#iii-réinitialisation-de-la-configuration"
  },"141": {
    "doc": "mware",
    "title": "IV. Mise à jour du firmware",
    "content": "Pour effectuer la mise à jour du firmware, suivez les étapes suivantes : . | Attribuez une adresse IP au switch en utilisant les commandes suivantes : hp-2600(config)# vlan 1 hp-2800(vlan-5)# ip address 192.168.1.2 255.255.255.0 hp-2800(vlan-5)# exit . | Vérifiez la connectivité entre votre poste de travail et le switch en effectuant un ping : ping 192.168.1.2 . | Affichez la version du firmware actuellement installé sur le switch en utilisant la commande suivante : . show flash . | Déposer le fichier de la dernier version du firmware sur votre serveur tftp . /!\\ Penser a désactiver votre par feu ou a autoriser le port 69 qui est utiliser par le serveur tftp /!\\ . | Transférez le fichier firmware vers l’image secondaire du switch en utilisant la commande suivante : | . copy tftp flash &lt;ip-du-tftp&gt; &lt;nom-fichier-firmware&gt;.swi secondary . | Démarrez le switch en utilisant l’image secondaire que vous venez de télécharger : boot system flash secondary . | Vérifiez que le switch est opérationnel avec le nouveau firmware en utilisant la commande suivante : show flash . | Appliquez le firmware à l’image primaire du switch et redémarrez sur cette image en utilisant les commandes suivantes : copy tftp flash &lt;ip-du-tftp&gt; &lt;nom-fichier-firmware&gt;.swi primary boot system flash primary . | Vérifiez à nouveau que l’image en cours d’utilisation est bien celle qui a été mise à jour en utilisant la commande suivante : show flash . | . En suivant ces étapes, j’ai était en mesure de mettre à jour le firmware des switches Aruba de manière efficace. Pour activer la mire web et constater que notre magnifique nouvelle a étai mise a jour. configure terminal web-management . Pour finalement ne pas l’utiliser vu que la CNIL recommande de désactiver la mire web pour des raison de sécurité, l’administration des switch se fera donc uniquement via le protocole ssh. no web-management . ",
    "url": "/Medaey/mware#iv-mise-%C3%A0-jour-du-firmware",
    
    "relUrl": "/Medaey/mware#iv-mise-à-jour-du-firmware"
  },"142": {
    "doc": "mware",
    "title": "mware",
    "content": " ",
    "url": "/Medaey/mware",
    
    "relUrl": "/Medaey/mware"
  },"143": {
    "doc": "neofetch",
    "title": "  1.Debian",
    "content": "1) Mettre à jour les depot . sudo apt-get update . 2) Installez le paquet neofetch . sudo apt-get install neofetch . ",
    "url": "/Medaey/neofetch#-1debian",
    
    "relUrl": "/Medaey/neofetch#-1debian"
  },"144": {
    "doc": "neofetch",
    "title": "2.Archlinux",
    "content": "1*) Installez le paquet via pacman . pacman -S neofetch . Information: neofetch est personnalisable, pour cela modifier le fichier “config.conf” . nano ~/.config/neofetch/config* . github.com . ",
    "url": "/Medaey/neofetch#2archlinux",
    
    "relUrl": "/Medaey/neofetch#2archlinux"
  },"145": {
    "doc": "neofetch",
    "title": "neofetch",
    "content": "Neofetch est un outils d’information système multiplateforme en ligne de commande, il recueille les informations de votre système et les affiche sur le terminal. ",
    "url": "/Medaey/neofetch",
    
    "relUrl": "/Medaey/neofetch"
  },"146": {
    "doc": "package-management-in-centos",
    "title": "YUM Installation and Update",
    "content": "Let’s start with a brief review of installing and updating packages. To install a package: . yum install packageName . To update a package: . yum update packageName . To update all packages: . yum update . While these commands are basic, they are the cornerstone of any package management tasks you’ll be performing. ",
    "url": "/Lucian/package-management-in-centos#yum-installation-and-update",
    
    "relUrl": "/Lucian/package-management-in-centos#yum-installation-and-update"
  },"147": {
    "doc": "package-management-in-centos",
    "title": "Group Management",
    "content": "YUM supports package groups, which are groups of packages that serve a similar purpose. For example, “Development Tools” is a package group. To list all available groups: . yum group list . To install a group: . yum group install 'groupName' . This feature is incredibly useful for installing a suite of packages that serve a common purpose. ",
    "url": "/Lucian/package-management-in-centos#group-management",
    
    "relUrl": "/Lucian/package-management-in-centos#group-management"
  },"148": {
    "doc": "package-management-in-centos",
    "title": "Search Packages",
    "content": "YUM allows you to search for packages using keywords related to the package. This can be particularly useful when you’re unsure of a package’s exact name: . yum search keyword . The search results will display a list of packages that contain the keyword in their name or summary. ",
    "url": "/Lucian/package-management-in-centos#search-packages",
    
    "relUrl": "/Lucian/package-management-in-centos#search-packages"
  },"149": {
    "doc": "package-management-in-centos",
    "title": "List Packages",
    "content": "YUM provides commands to list all available, installed, or specific packages: . yum list all yum list installed yum list packageName . It is a great way to quickly view what’s available or installed on your system. ",
    "url": "/Lucian/package-management-in-centos#list-packages",
    
    "relUrl": "/Lucian/package-management-in-centos#list-packages"
  },"150": {
    "doc": "package-management-in-centos",
    "title": "Package Info",
    "content": "The info command provides detailed information about a package: . yum info packageName . This can be particularly useful when evaluating a package for potential installation. ",
    "url": "/Lucian/package-management-in-centos#package-info",
    
    "relUrl": "/Lucian/package-management-in-centos#package-info"
  },"151": {
    "doc": "package-management-in-centos",
    "title": "Remove Packages",
    "content": "Removing a package is as simple as: . yum remove packageName . YUM will take care of resolving and removing dependencies as well. ",
    "url": "/Lucian/package-management-in-centos#remove-packages",
    
    "relUrl": "/Lucian/package-management-in-centos#remove-packages"
  },"152": {
    "doc": "package-management-in-centos",
    "title": "Clean YUM Cache",
    "content": "YUM stores package data from the repositories to which your system is connected. Over time, this cache may become cluttered with outdated package data. To clean all cached files from any enabled repository, use: . yum clean all . This command is helpful for reclaiming disk space and ensuring up-to-date package data. ",
    "url": "/Lucian/package-management-in-centos#clean-yum-cache",
    
    "relUrl": "/Lucian/package-management-in-centos#clean-yum-cache"
  },"153": {
    "doc": "package-management-in-centos",
    "title": "YUM History",
    "content": "One of the powerful features of YUM is its ability to maintain a detailed history of transactions. To view this history: . yum history . You can use the history command to undo or redo certain transactions: . yum history undo transactionID yum history redo transactionID . This is an incredibly powerful feature that allows for detailed troubleshooting and system recovery. ",
    "url": "/Lucian/package-management-in-centos#yum-history",
    
    "relUrl": "/Lucian/package-management-in-centos#yum-history"
  },"154": {
    "doc": "package-management-in-centos",
    "title": "Managing Repositories",
    "content": "YUM allows for the management of repositories from which it retrieves package data. To list all repositories: . yum repolist . You can enable or disable repositories during package installations: . yum --enablerepo=repositoryName install packageName yum --disablerepo=repositoryName install packageName . This allows for granular control over the source of your packages. ",
    "url": "/Lucian/package-management-in-centos#managing-repositories",
    
    "relUrl": "/Lucian/package-management-in-centos#managing-repositories"
  },"155": {
    "doc": "package-management-in-centos",
    "title": "Conclusion",
    "content": "Mastering YUM is an important part of managing CentOS and other RPM-based systems. While the basic commands are powerful and useful, delving into the more advanced features of YUM can vastly increase your efficiency and effectiveness as a system administrator. Remember, practice makes perfect. Use these commands, play around with them, and see what works best for your workflow. In time, you’ll be navigating YUM like a pro. Happy package managing! . ",
    "url": "/Lucian/package-management-in-centos#conclusion",
    
    "relUrl": "/Lucian/package-management-in-centos#conclusion"
  },"156": {
    "doc": "package-management-in-centos",
    "title": "package-management-in-centos",
    "content": "YUM (Yellowdog Updater Modified) is a powerful package management tool in CentOS and other RPM-based Linux distributions. It’s a reliable resource for installing, updating, and removing packages, along with their dependencies. Beyond the basics, YUM also supports package groups, allows package caching, and has a host of other features. This guide will help you navigate the advanced side of YUM and streamline your package management tasks. ",
    "url": "/Lucian/package-management-in-centos",
    
    "relUrl": "/Lucian/package-management-in-centos"
  },"157": {
    "doc": "partager-un-dossier-linux-vers-windows",
    "title": "1.Installer samba",
    "content": "1) Mettre à jour les dépôts &amp; paquets . sudo apt-get update &amp;&amp; sudo apt-get upgrade -y . 2) Installe le paquet samba . sudo apt-get install samba . ",
    "url": "/Medaey/partager-un-dossier-linux-vers-windows#1installer-samba",
    
    "relUrl": "/Medaey/partager-un-dossier-linux-vers-windows#1installer-samba"
  },"158": {
    "doc": "partager-un-dossier-linux-vers-windows",
    "title": "2.Configurer samba",
    "content": "3) Crée un nouvel utilisateur pour le partage . sudo adduser poulet . 4) Définir le mot de passe de l’utilisateur poulet pour se connecter au dossier partagé . sudo smbpasswd -a poulet . 5) Créer un dossier pour le partage . mkdir /partage . 6) Ajouter les droits sur le dossier de partage . sudo chown poulet /partage . 7) Faire une sauvegarde du fichier de configuration smb.conf . sudo mv /etc/samba/smb.conf /etc/samba/smb.conf.bak . 8) Crée un nouveau fichier de configuration pour samba . sudo nano /etc/samba/smb.conf . exemple: smb.config . [Partage] path=/partage browseable=yes valid users = root poulet michel robert read only=no . 9) Redémarre le service samba . sudo /etc/init.d/smbd restart . 10) Ajouter le service samba à chaque démarrage . sudo systemctl enable samba . 11) Ouvre le port 445 . sudo ufw allow 445/tcp . ",
    "url": "/Medaey/partager-un-dossier-linux-vers-windows#2configurer-samba",
    
    "relUrl": "/Medaey/partager-un-dossier-linux-vers-windows#2configurer-samba"
  },"159": {
    "doc": "partager-un-dossier-linux-vers-windows",
    "title": "3.Connexion au partage",
    "content": "12) Connectez-vous au partage via explorer de fichier, tapez \\@ip du pc_linux .   . ubuntu-fr.org . ",
    "url": "/Medaey/partager-un-dossier-linux-vers-windows#3connexion-au-partage",
    
    "relUrl": "/Medaey/partager-un-dossier-linux-vers-windows#3connexion-au-partage"
  },"160": {
    "doc": "partager-un-dossier-linux-vers-windows",
    "title": "partager-un-dossier-linux-vers-windows",
    "content": " ",
    "url": "/Medaey/partager-un-dossier-linux-vers-windows",
    
    "relUrl": "/Medaey/partager-un-dossier-linux-vers-windows"
  },"161": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Practical Guide to Ansible: File and Directory Operations",
    "content": "Ansible is an open-source IT automation tool that simplifies complex configuration, management, and application deployment. One area where Ansible particularly shines is file and directory operations. In this guide, we’ll explore how to create, delete, and manage files and directories using Ansible. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#practical-guide-to-ansible-file-and-directory-operations",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#practical-guide-to-ansible-file-and-directory-operations"
  },"162": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Prerequisites",
    "content": "Before proceeding, ensure you have installed Ansible and configured it with Python3 as per the guide provided earlier. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#prerequisites",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#prerequisites"
  },"163": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Ansible Playbook Basics",
    "content": "Ansible playbooks are YAML files where you define your automation tasks. They provide a sequence of operations to be executed on a managed host. A playbook can have one or more ‘plays’, and each play can have one or more ‘tasks’. Let’s look at a basic playbook structure: . --- - hosts: all tasks: - name: Task 1 ... Here, hosts: all indicates that the tasks in this playbook will be run on all hosts in your inventory. Each task is represented by a - name: line followed by the actual command(s). Now, let’s delve into file and directory operations. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#ansible-playbook-basics",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#ansible-playbook-basics"
  },"164": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Creating Files with Ansible",
    "content": "Ansible provides the copy module for creating files. You can use it to create a new file on your host machines. Here’s an example: . --- - hosts: all tasks: - name: Create a file copy: content: \"Hello, World!\" dest: /tmp/hello.txt . This playbook creates a file at /tmp/hello.txt with the content Hello, World!. The copy module creates a new file and copies the content you specify to that file. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#creating-files-with-ansible",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#creating-files-with-ansible"
  },"165": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Deleting Files with Ansible",
    "content": "You can use the file module in Ansible to remove files. Here’s an example: . --- - hosts: all tasks: - name: Delete a file file: path: /tmp/hello.txt state: absent . This playbook removes the file at /tmp/hello.txt. The state: absent ensures the file does not exist. If it does, Ansible will delete it. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#deleting-files-with-ansible",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#deleting-files-with-ansible"
  },"166": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Creating Directories with Ansible",
    "content": "To create directories, we again use the file module, but with state: directory. Here’s an example: . --- - hosts: all tasks: - name: Create a directory file: path: /tmp/my_folder state: directory . This playbook ensures a directory exists at /tmp/my_folder. If it does not, Ansible will create it. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#creating-directories-with-ansible",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#creating-directories-with-ansible"
  },"167": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Deleting Directories with Ansible",
    "content": "Deleting directories is the same as deleting files. You just specify the directory path: . --- - hosts: all tasks: - name: Delete a directory file: path: /tmp/my_folder state: absent . This playbook will remove the directory at /tmp/my_folder. If the directory exists, Ansible will delete it. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#deleting-directories-with-ansible",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#deleting-directories-with-ansible"
  },"168": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Changing File Permissions with Ansible",
    "content": "You can change file or directory permissions using the mode parameter: . --- - hosts: all tasks: - name: Change file permissions file: path: /tmp/hello.txt mode: '0644' . This playbook will change the permissions of /tmp/hello.txt to 0644. ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#changing-file-permissions-with-ansible",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#changing-file-permissions-with-ansible"
  },"169": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "Conclusion",
    "content": "Ansible provides simple and effective mechanisms to manage files and directories on remote hosts. Through its file and copy modules, you can control the state, content, and permissions of your files and directories. While we’ve covered the basics here, remember that Ansible is a powerful tool with many more capabilities. As you continue exploring Ansible, you’ll discover ways to manage complex configurations and automate repetitive tasks, making your IT management tasks more efficient and reliable. Happy Ansible-ing! . ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#conclusion",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations#conclusion"
  },"170": {
    "doc": "practical-guide-to-ansible-file-and-directory-operations",
    "title": "practical-guide-to-ansible-file-and-directory-operations",
    "content": " ",
    "url": "/Lucian/practical-guide-to-ansible-file-and-directory-operations",
    
    "relUrl": "/Lucian/practical-guide-to-ansible-file-and-directory-operations"
  },"171": {
    "doc": "qemu",
    "title": "QEMU c’est quoi ?",
    "content": "QEMU est une solution d’émulation de processeur et d’architecture qui est à la base de projets comme KVM et Virtualbox, c’est en quelque sorte une des briques fondamentales de ces outils de virtualisation. ⚠️ Pour la suite, il faut que QEMU soit installé sur votre système . ",
    "url": "/Medaey/qemu#qemu-cest-quoi-",
    
    "relUrl": "/Medaey/qemu#qemu-cest-quoi-"
  },"172": {
    "doc": "qemu",
    "title": "Crée une machine virtuelle avec QEMU",
    "content": "Pour créer cette Machine virtuelle (VM) il faudra définir les éléments suivants : . | Crée un disque virtuel et définir ça taille | L’architecture du système de la VM | Définir la RAM de la VM | Indiquer le fichier iso à utiliser | . Dans un premier temps il me faut créer un disque virtuel qui va stocker toutes les données de la VM. qemu-img create debian.img 8G . Au tour de l’architecture, celle que je vais utiliser est une architecture 64 bits qemu-system-x86_64 mais il en existe d’autres qemu-system-i386, qemu-system-arm,… Il faut donc indiquer la bonne architecture. Par exemple, amr64 pour raspbian. Et enfin la RAM, 1024Mo devrait suffire pour une debian sans interface graphique. Voici donc la commande que j’exécute pour créer la VM debian avec QEMU. qemu-system-x86_64 -hda debian.img -cdrom debian-11.2.0-amd64-netinst.iso -m 1024M -boot order=dc . Une magnifique interface nommée QEMU apparaît 🥳 . Une fois toutes les étapes d’installation effectué, j’arrête la machiner est la redémarre avec la commande ci-dessous. qemu-system-x86_64.exe -hda image.img --cdrom debian-11.2.0-amd64-netinst.iso -m 1024M . 📝 https://doc.ubuntu-fr.org/qemu 📝 https://www.tremplin-numerique.org/comment-utiliser-qemu-pour-demarrer-un-autre-systeme-dexploitation 📝 https://www.lojiciels.com/quest-ce-que-qemu-kvm-sous-linux/#Quelles_sont_les_differences_entre_QEMU_et_KVM . ",
    "url": "/Medaey/qemu#cr%C3%A9e-une-machine-virtuelle-avec-qemu",
    
    "relUrl": "/Medaey/qemu#crée-une-machine-virtuelle-avec-qemu"
  },"173": {
    "doc": "qemu",
    "title": "qemu",
    "content": "[TOC] . ",
    "url": "/Medaey/qemu",
    
    "relUrl": "/Medaey/qemu"
  },"174": {
    "doc": "rectifying-a-bad-commit-in-git-a-step-by-step-guide",
    "title": "Step 1: Identify the Bad Commit",
    "content": "The first step is to identify the commit that you want to correct. Git keeps a record of all the commits you’ve made in your repository. You can view this history using the git log command. git log . This command will show you a list of all your previous commits in reverse chronological order. Each commit is represented by a unique SHA-1 hash, followed by the commit message, the author, and the date and time of the commit. Identify the hash of the commit that you want to correct. ",
    "url": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-1-identify-the-bad-commit",
    
    "relUrl": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-1-identify-the-bad-commit"
  },"175": {
    "doc": "rectifying-a-bad-commit-in-git-a-step-by-step-guide",
    "title": "Step 2: Choose the Correct Method",
    "content": "Depending on the state of your project and the nature of the mistake, there are different methods you might want to use to rectify a bad commit: . | git commit –amend: If the bad commit was the most recent one and you haven’t pushed your changes to a remote repository yet, you can use git commit --amend to easily modify it. | git revert: If you want to undo the changes introduced by a commit, but keep the history of all the changes made, use git revert. | git reset: If you need to completely remove a commit from your history, use git reset. | . ",
    "url": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-2-choose-the-correct-method",
    
    "relUrl": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-2-choose-the-correct-method"
  },"176": {
    "doc": "rectifying-a-bad-commit-in-git-a-step-by-step-guide",
    "title": "Step 3: Apply the Correct Method",
    "content": "Amend the Most Recent Commit . To amend the most recent commit, you can simply make the necessary changes to your files, stage them with git add, and then run git commit --amend. git commit --amend -m \"New and correct commit message\" . Revert a Commit . To revert a commit, simply use the git revert command followed by the hash of the bad commit: . git revert commit-hash . This command will create a new commit that undoes the changes made in the bad commit, while preserving the history of your project. Reset a Commit . If you want to completely remove a commit from your history, you can use the git reset command. The --hard option will delete the commit and all the changes introduced by it: . git reset --hard commit-hash^ . Replace commit-hash with the hash of the commit you want to remove. The ^ character refers to the parent of the specified commit, which will be the new HEAD after the command is executed. ",
    "url": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-3-apply-the-correct-method",
    
    "relUrl": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-3-apply-the-correct-method"
  },"177": {
    "doc": "rectifying-a-bad-commit-in-git-a-step-by-step-guide",
    "title": "Step 4: Push Your Changes to the Remote Repository",
    "content": "Once you’ve rectified the bad commit locally, you’ll want to update the remote repository. If you used git commit --amend or git reset, and if you had previously pushed the bad commit to the remote repository, you’ll have to force push your new commit: . git push origin branch-name --force . Be careful with git push --force, as it can overwrite changes in the remote repository. Use it sparingly and only when you’re sure it’s necessary. If you used git revert, a simple git push will suffice: . git push origin branch-name . Rectifying a bad commit may seem like a daunting task, but with the right tools and commands, it can be done quickly and efficiently. Mistakes are a part of any development process, and Git provides robust tools to correct them when they occur. Happy coding! . ",
    "url": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-4-push-your-changes-to-the-remote-repository",
    
    "relUrl": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide#step-4-push-your-changes-to-the-remote-repository"
  },"178": {
    "doc": "rectifying-a-bad-commit-in-git-a-step-by-step-guide",
    "title": "rectifying-a-bad-commit-in-git-a-step-by-step-guide",
    "content": "Git is an incredibly powerful tool for managing and collaborating on projects of any size. But with great power comes great responsibility, and sometimes mistakes are made. Don’t worry! Git provides several ways to fix a bad commit. In this article, we’ll explore how to rectify a bad commit step by step. ",
    "url": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide",
    
    "relUrl": "/Lucian/rectifying-a-bad-commit-in-git-a-step-by-step-guide"
  },"179": {
    "doc": "routageInterVlan",
    "title": "Présentation du routage inter Vlan",
    "content": "Le routage inter vlan et comme son nom l’indique est un mécanisme de routage des données d’un Vlan vers un autre Vlan afin que les équipements présents dans c’est 2 réseaux locaux virtuels puissent communiquer. ",
    "url": "/Medaey/routageInterVlan#pr%C3%A9sentation-du-routage-inter-vlan",
    
    "relUrl": "/Medaey/routageInterVlan#présentation-du-routage-inter-vlan"
  },"180": {
    "doc": "routageInterVlan",
    "title": "I Configuration du router",
    "content": "Pour pouvoir effectuer du routage inter vlan le routeur doit avoir une interface/carte réseau et une ip dans chacun des vlan. Plutôt que de devoir ajouter une carte réseau physique par vlan sur le router. Je vais plutôt créer plusieurs interfaces virtuelles sur une carte réseau physique et attribuer une IP par interface virtuelle. Déjà il faut mettre le router Cisco en mode configuration . Router&gt;en Router#conf t . Puis je crée une sous-interface pour chaque vlan dans mon cas il en aura 2 donc je créer une sous-interface pour le vlan 10 et lui donne l’adresse IP 192.168.1.254. Router(config)#int fa 0/0.10 Router(config-subif)#en d 10 Router(config-subif)#ip ad 192.168.1.254 255.255.255.0 Router(config-subif)#ex . pareille pour le vlan 20 . Router(config)#int fa 0/0.20 Router(config-subif)#en d 20 Router(config-subif)#ip ad 192.168.2.254 255.255.255.0 Router(config-subif)#ex . Enfin j’active l’interface fastEthernet 0/0 du router qui est l’interface physique qui a “en elle” les 2 autres sous interface. Router(config)#int fa 0/0 Router(config-if)#no sh . ",
    "url": "/Medaey/routageInterVlan#i-configuration-du-router",
    
    "relUrl": "/Medaey/routageInterVlan#i-configuration-du-router"
  },"181": {
    "doc": "routageInterVlan",
    "title": "II Configuration du switch",
    "content": "Pour que le routage inter-vlan soit fonctionnel il va falloir créer les vlan sur le switch et indiquer quel port fait parti de quel vlan. Il sera aussi nécessaire de passer le ou les ports utilisé par le router en mode TRUNK/port tagué affin qui est bien un accès dans le 2 vlan. Passe le Switch en mode configuration . Switch&gt;en Switch#conf t . Créer le vlan 10 sur le Switch . Switch(config)#vlan 10 Switch(config-vlan)#name VLAN10 Switch(config-vlan)#ex . Créer le vlan 20 sur le Switch . Switch(config)#vlan 20 Switch(config-vlan)#name VLAN20 Switch(config-vlan)#ex . Les ports fastEthernet de 1 à 12 dans la vlan 10 . Switch(config)#int ra fa 0/1-12 Switch(config-if-range)#sw m a Switch(config-if-range)#sw a v 10 Switch(config-if-range)#no sh Switch(config-if-range)#ex . Les ports fastEthernet de 13 à 24 dans la vlan 20 . Switch(config)#int ra fa 0/13-24 Switch(config-if-range)#sw m a Switch(config-if-range)#sw a v 20 Switch(config-if-range)#no sh Switch(config-if-range)#ex . Configurer les 2 ports Gigabit Ethernet en mode Trunks . Switch(config)#in ra gi 0/1-2 Switch(config-if-range)#sw m t Switch(config-if-range)#no sh Switch(config-if-range)#ex . Afficher tout les vlan du switch et le port qui y sont attribué . Switch(config)#do sh vl . A ce stade tout le voyant devrait passer au vert sur Cisco Packet Tracer . ",
    "url": "/Medaey/routageInterVlan#ii-configuration-du-switch",
    
    "relUrl": "/Medaey/routageInterVlan#ii-configuration-du-switch"
  },"182": {
    "doc": "routageInterVlan",
    "title": "III Test Routage Vlan",
    "content": "Ping un équipement du vlan 10 . Router#ping ip 192.168.1.1 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 192.168.1.1, timeout is 2 seconds: !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 0/0/1 ms . Ping un équipement du vlan 20 . Router#ping ip 192.168.2.1 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 192.168.2.1, timeout is 2 seconds: !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 0/0/0 ms . Un dernier test depuis un ordinateur du VLAN 10 je ping un ordinateur du VLAN20 . C:&gt;ipconfig . FastEthernet0 Connection:(default port) . Link-local IPv6 Address………: FE80::2D0:FFFF:FE7B:64D7 . IP Address………………….: 192.168.1.1 . Subnet Mask…………………: 255.255.255.0 . Default Gateway……………..: 192.168.1.254 . C:&gt;ping 192.168.2.1 . Pinging 192.168.2.1 with 32 bytes of data: . Reply from 192.168.2.1: bytes=32 time=4ms TTL=127 . Reply from 192.168.2.1: bytes=32 time=3ms TTL=127 . Reply from 192.168.2.1: bytes=32 time=1ms TTL=127 . Reply from 192.168.2.1: bytes=32 time&lt;1ms TTL=127 . Ping statistics for 192.168.2.1: . ​ Packets: Sent = 4, Received = 4, Lost = 0 (0% loss), . Approximate round trip times in milli-seconds: . ​ Minimum = 0ms, Maximum = 4ms, Average = 2ms . C:&gt; . Le routage intervlan est donc fonctionnel . ▶️ https://youtu.be/pVA9Fy-UXjg . 📝️ https://www.it-connect.fr/mise-en-place-de-vlans-et-de-routage-inter-vlans/ . ",
    "url": "/Medaey/routageInterVlan#iii-test-routage-vlan",
    
    "relUrl": "/Medaey/routageInterVlan#iii-test-routage-vlan"
  },"183": {
    "doc": "routageInterVlan",
    "title": "routageInterVlan",
    "content": "[TOC] . ⏩ Pas le temps ? Fait un copier-coller des textes ci-dessous dans les bons équipements et le routage inter vlan est terminé😄 . Router 1841 . en conf t int fa 0/0.10 en d 10 ip ad 192.168.1.254 255.255.255.0 ex int fa 0/0.20 en d 20 ip ad 192.168.2.254 255.255.255.0 ex int fa 0/0 no sh . Switch 2960 (24 port) . en conf t vlan 10 name VLAN10 ex vlan 20 name VLAN20 ex int ra fa 0/1-12 sw m a sw a v 10 no sh ex int ra fa 0/13-24 sw m a sw a v 20 no sh ex in ra gi 0/1-2 sw m t no sh ex . ",
    "url": "/Medaey/routageInterVlan",
    
    "relUrl": "/Medaey/routageInterVlan"
  },"184": {
    "doc": "récupere-la-version-d'internet-explorer",
    "title": "récupere-la-version-d'internet-explorer",
    "content": "Pour connaitre la version d’IE nous allons lire une clef de registre avec une commande. 1) Ouvrir une invitation de commandes . 2) Lire la clef de registre svcVersion via cette commande . reg query \"HKEY\\_LOCAL\\_MACHINE\\Software\\Microsoft\\Internet Explorer\" /v svcVersion .   . spiceworks.com . ",
    "url": "/Medaey/r%C3%A9cupere-la-version-d'internet-explorer",
    
    "relUrl": "/Medaey/récupere-la-version-d'internet-explorer"
  },"185": {
    "doc": "setting-up-ansible-with-python3",
    "title": "Setting Up Ansible with Python3",
    "content": "Ansible is an open-source automation tool that can automate various aspects of system administration such as configuration management, application deployment, and task automation. In this article, we will walk through the steps required to set up Ansible with Python3. ",
    "url": "/Lucian/setting-up-ansible-with-python3#setting-up-ansible-with-python3",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3#setting-up-ansible-with-python3"
  },"186": {
    "doc": "setting-up-ansible-with-python3",
    "title": "Prerequisites",
    "content": "Before we begin, ensure that you have the following installed on your system: . | Python 3: Ansible is built with Python and you need it to run Ansible commands. You can check your Python version by running python3 --version in your terminal. If you do not have Python installed, follow the Python installation guide for your operating system. | A text editor: You’ll need this to create and edit Ansible playbooks. You can use any text editor you prefer, such as Vim, Nano, or Sublime Text. | A target machine: This is the machine you will be controlling with Ansible. It could be a remote server or a local virtual machine. | . ",
    "url": "/Lucian/setting-up-ansible-with-python3#prerequisites",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3#prerequisites"
  },"187": {
    "doc": "setting-up-ansible-with-python3",
    "title": "Step 1: Install Ansible",
    "content": "The installation of Ansible varies depending on the operating system. For Ubuntu, you can install Ansible using apt: . sudo apt update sudo apt install ansible . For CentOS or RHEL, you can use yum: . sudo yum install ansible . For MacOS, you can use Homebrew: . brew install ansible . Check the installation by running ansible --version. This should display information about the installed Ansible version and its configuration. ",
    "url": "/Lucian/setting-up-ansible-with-python3#step-1-install-ansible",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3#step-1-install-ansible"
  },"188": {
    "doc": "setting-up-ansible-with-python3",
    "title": "Step 2: Configure Ansible",
    "content": "Once installed, Ansible looks for a configuration file in several locations, in the following order: . | ANSIBLE_CONFIG (environment variable if set) | ansible.cfg (in the current directory) | ~/.ansible.cfg (in the home directory) | /etc/ansible/ansible.cfg | . If you want to configure Ansible for all users on the system, it’s best to edit /etc/ansible/ansible.cfg. However, if you want to configure it just for your user, creating ~/.ansible.cfg would be a better choice. Ansible also uses a hosts file where it looks up the hosts to connect. By default, this file is located at /etc/ansible/hosts. You can change this in your configuration file or use the -i flag when running Ansible commands. An example of how to add hosts to the Ansible hosts file: . [web] 192.168.1.10 192.168.1.11 [db] 192.168.1.20 . Here, we’ve added two groups of hosts: web and db. ",
    "url": "/Lucian/setting-up-ansible-with-python3#step-2-configure-ansible",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3#step-2-configure-ansible"
  },"189": {
    "doc": "setting-up-ansible-with-python3",
    "title": "Step 3: Configure Python Interpreter",
    "content": "Ansible uses Python to execute its modules, and it will automatically detect and use Python2 if it is available. If you want to use Python3, you will need to explicitly configure it. To configure Ansible to use Python3, you can set the ansible_python_interpreter variable to the location of Python3 for a group or a host in your inventory file: . [web] 192.168.1.10 ansible_python_interpreter=/usr/bin/python3 192.168.1.11 ansible_python_interpreter=/usr/bin/python3 [db] 192.168.1.20 ansible_python_interpreter=/usr/bin/python3 . You can also set this variable globally in your ansible.cfg file: . [defaults] interpreter_python = /usr/bin/python3 . ",
    "url": "/Lucian/setting-up-ansible-with-python3#step-3-configure-python-interpreter",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3#step-3-configure-python-interpreter"
  },"190": {
    "doc": "setting-up-ansible-with-python3",
    "title": "Step 4: Testing Your Setup",
    "content": "With Ansible installed and configured, you can now try running a simple command on your hosts to see if everything works as expected: . ansible all -m ping . This command will use the ping module to test the connection to all hosts in your inventory. If everything is set up correctly, you should see a pong reply from each of them. ",
    "url": "/Lucian/setting-up-ansible-with-python3#step-4-testing-your-setup",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3#step-4-testing-your-setup"
  },"191": {
    "doc": "setting-up-ansible-with-python3",
    "title": "Conclusion",
    "content": "Setting up Ansible with Python3 might seem intimidating at first, but once you understand the process, it becomes straightforward. With Ansible, you can efficiently manage your infrastructure and automate repetitive tasks, and with Python3, you benefit from the latest features and improvements of the Python language. Remember that understanding and effectively using Ansible requires practice. Start by writing simple playbooks, and gradually incorporate more complex configurations as you become more comfortable with the tool. Happy automating! . ",
    "url": "/Lucian/setting-up-ansible-with-python3#conclusion",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3#conclusion"
  },"192": {
    "doc": "setting-up-ansible-with-python3",
    "title": "setting-up-ansible-with-python3",
    "content": " ",
    "url": "/Lucian/setting-up-ansible-with-python3",
    
    "relUrl": "/Lucian/setting-up-ansible-with-python3"
  },"193": {
    "doc": "spectreMeltdown",
    "title": " 1. Sous Windows 10",
    "content": "1) Lancez Powershell en mode administrateur et tapez les commandes suivantes : . Install-Module SpeculationControl . Set-ExecutionPolicy RemoteSigned . Import-Module SpeculationControl . Get-SpeculationControlSettings . (Si il y a du rouge la machine est vulnérable –‘) . 2) On remet les paramètres de sécurité par défaut une fois le résultat obtenu: . Set-ExecutionPolicy Default . exemple de machine vulnérable Windows: . ",
    "url": "/Medaey/spectreMeltdown#1-sous-windows-10",
    
    "relUrl": "/Medaey/spectreMeltdown#1-sous-windows-10"
  },"194": {
    "doc": "spectreMeltdown",
    "title": "2. sous Linux",
    "content": "wget https://raw.githubusercontent.com/speed47/spectre-meltdown-checker/master/spectre-meltdown-checker.sh . sudo sh spectre-meltdown-checker.sh . exemple: Ci dessous une machine vulnérable. Les seuls conseils à l’heure actuelle et de faire les mise à jour du BIOS, système d’exploitation et application. spectreattack.com  microsoft.com  github.com . ",
    "url": "/Medaey/spectreMeltdown#2-sous-linux",
    
    "relUrl": "/Medaey/spectreMeltdown#2-sous-linux"
  },"195": {
    "doc": "spectreMeltdown",
    "title": "spectreMeltdown",
    "content": "Salutation dans cet article nous allons voir comment vérifier si vos machines sont vulnérables aux failles de sécurité spectre &amp; Meltdown. (Pour plus d’informations sur c’est 2 failles consultées les liens en bas de l’article)  . ",
    "url": "/Medaey/spectreMeltdown",
    
    "relUrl": "/Medaey/spectreMeltdown"
  },"196": {
    "doc": "squid",
    "title": "Présentation",
    "content": "Un proxy ou serveur mandataire est un intermédiaire entre deux hôtes par exemple entre les machines de votre réseau et internet, Squid proxy très connu du monde Open Source permet de filtrer les sites internet accessibles. Une autre utilité de squid est qu’il est “Cachant”, c’est-à-dire qu’il va permettre une mise en cache des pages consultées afin qu’a la prochaine consultation cette page charge plus rapide. SquidGuard est add-on de Squid qui permet un filtrage encore plus précis. ",
    "url": "/Medaey/squid#pr%C3%A9sentation",
    
    "relUrl": "/Medaey/squid#présentation"
  },"197": {
    "doc": "squid",
    "title": "Installation",
    "content": "Je commande par mettre à jour les dépôts et j’installe squid avec apt . sudo apt update -y &amp;&amp; sudo apt upgrade -y &amp;&amp; sudo apt install squid -y . ",
    "url": "/Medaey/squid#installation",
    
    "relUrl": "/Medaey/squid#installation"
  },"198": {
    "doc": "squid",
    "title": "Autorisation du pare-feu",
    "content": "Le pare-feu ufw est installer, il me faut donc autoriser le port 3128 en TCP . sudo ufw allow 3128/tcp &amp;&amp; sudo ufw status numbered | grep 3128 . ",
    "url": "/Medaey/squid#autorisation-du-pare-feu",
    
    "relUrl": "/Medaey/squid#autorisation-du-pare-feu"
  },"199": {
    "doc": "squid",
    "title": "Configuration de Squid",
    "content": "Squid peut faire un blocage par WhiteList ou par BlackList. WhiteList: Bloque tout et autorise uniquement les sites de la liste BlackList: Autorise tout et bloque uniquement les sites de la liste . J’ai choisi de faire un filtrage par whitelist. Je commence par sauvegarder le fichier de configuration par défaut pour pouvoir revenir à la configuration initiale en cas de probléme. sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.bak &amp;&amp; ls -l /etc/squid/ . Le fichier squid.conf n’est pas très lisible, un bon vieux sed avec de l’expression régulière va rendre le fichier plus lisible. sudo sed -i '/^#/d' /etc/squid/squid.conf ; sudo sed -i '/^$/d' /etc/squid/squid.conf &amp;&amp; head /etc/squid/squid.conf . Petite vérification de l’état du service. sudo systemctl restart squid ; sudo systemctl status squid . Bon le service fonctionne correctement. C’est l’heure de configurer les AccesControlList ou ACL . Pour créer des règles de filtrage avec squid, il faut définir les éléments que l’on veut impacter. Dans mon cas ce sera le réseau compta qui à pour adresse IP 192.168.1.0/24. Ce sera nos ACL (Access Control Liste ou Liste de Contrôle d’Accès) . acl compta src 192.168.1.0/24 . Puis je rajoute une règle http_access qui bloquera l’accès internet à toutes les machines qui sont dans le groupe compta. http_access deny compta . ",
    "url": "/Medaey/squid#configuration-de-squid",
    
    "relUrl": "/Medaey/squid#configuration-de-squid"
  },"200": {
    "doc": "squid",
    "title": "Test du proxy",
    "content": "Normalement si je définis le proxy sur un pc de la compta est que je fait une recherche internet la moindre recherche sera refusée par le proxy. Par exemple quand je cherchais à accès au site https://cossu.tech/ cette erreur apparaît. ERREUR L’URL demandée n’a pas pu être trouvée . L’erreur suivante s’est produite en essayant d’accéder à l’URL : http://cossu.tech/ . Accès interdit. La configuration du contrôle d’accès empêche votre requête d’être acceptée. Si vous pensez &gt;que c’est une erreur, contactez votre fournisseur d’accès. Votre administrateur proxy est webmaster. Donc le proxy fonctionne ! . ",
    "url": "/Medaey/squid#test-du-proxy",
    
    "relUrl": "/Medaey/squid#test-du-proxy"
  },"201": {
    "doc": "squid",
    "title": "Autoriser des sites pour le réseau compta",
    "content": "Bon maintenant que le blocage fonctionne bien il est temps d’autoriser des sites internet. Pour cela il faut créer un fichier qui contiendra les sites autorisé. sudo bash -c 'echo \".cossu.tech\" &gt;&gt; /etc/squid/liste-sites.txt' ; cat /etc/squid/liste-sites.txt . Enfin je créer un ACL qui autorise la liste qui est dans /etc/squid/liste-sites.txt. sudo nano /etc/squid/squid.conf . acl liste_url dstdomain “/etc/squid/liste-sites.txt” http_access allow compta liste_url . ⚠️ L’ordre des lignes est important, car squid fait un traitement séquentiel de ce fichier ! . Pour finir, redémarrez le service pour que les modifications soient bien appliqué. sudo service squid restart ; sudo service squid status . La liste des sites contenu dans le fichier /etc/squid/liste-sites.txt est désormais autorisé pour le réseau compta. ",
    "url": "/Medaey/squid#autoriser-des-sites-pour-le-r%C3%A9seau-compta",
    
    "relUrl": "/Medaey/squid#autoriser-des-sites-pour-le-réseau-compta"
  },"202": {
    "doc": "squid",
    "title": "Note",
    "content": "Voir les logs . sudo tail -f /var/log/squid/access.log . Ajouter un site dans la liste . sudo bash -c 'echo \".ytimg.com\" &gt;&gt; /etc/squid/liste-sites.txt' ; cat /etc/squid/liste-sites.txt &amp;&amp; sudo service squid reload ; sudo service squid status . ",
    "url": "/Medaey/squid#note",
    
    "relUrl": "/Medaey/squid#note"
  },"203": {
    "doc": "squid",
    "title": "Source",
    "content": "https://www.ibisc.univ-evry.fr/~petit/Enseignement/AdminSystem/IUP-ASR/2007-2008-IUP-ASR-ADSY/Projet-2007-2008/squid.pdf . ",
    "url": "/Medaey/squid#source",
    
    "relUrl": "/Medaey/squid#source"
  },"204": {
    "doc": "squid",
    "title": "squid",
    "content": "[TOC] . ",
    "url": "/Medaey/squid",
    
    "relUrl": "/Medaey/squid"
  },"205": {
    "doc": "supprimer-un-profil-utilisateur-windows",
    "title": "1. La méthode simple ",
    "content": "1) Touche Windows + R pour afficher la console d’exécution Windows . 2) Tapez la commande sysdm.cpl ,3 . 3) Aller dans les Paramètres utilisateurs . 4) Supprimer le profil utilisateur . (Attention si l’option supprimer est gris redémarrer le pc en mode sans échec et connecter vous avec le compte administrateur local) . ",
    "url": "/Medaey/supprimer-un-profil-utilisateur-windows#1-la-m%C3%A9thode-simple",
    
    "relUrl": "/Medaey/supprimer-un-profil-utilisateur-windows#1-la-méthode-simple"
  },"206": {
    "doc": "supprimer-un-profil-utilisateur-windows",
    "title": "2. La méthode manuel",
    "content": "1*) Cette méthode consiste à supprimer à la main, dossier et clef de registre de l’utilisateur . 2*) Supprimer le dossier de l’utilisateur concerner, il ce situe dans C:\\Users (ou C:\\Utilisateurs)  . 3*) Trouver &amp; supprimer les clefs de registre de l’utilisateur elle sont situé dans . HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList .  4*) Une fois les clef de registre S-1-X-X-XX… de l’utilisateur que vous souhaite supprimer localisée, faire un clic droit supprimer. it-connect.fr  gland.fr . ",
    "url": "/Medaey/supprimer-un-profil-utilisateur-windows#2-la-m%C3%A9thode-manuel",
    
    "relUrl": "/Medaey/supprimer-un-profil-utilisateur-windows#2-la-méthode-manuel"
  },"207": {
    "doc": "supprimer-un-profil-utilisateur-windows",
    "title": "supprimer-un-profil-utilisateur-windows",
    "content": "Sur les versions récentes de Windows, pour supprimer un profil utilisateur il ne suffit pas de supprimer le dossier du profils utilisateurs (par défaut : C:\\Users). Si vous procédez comme cela et que l’utilisateur se connecte à nouveau, un profil temporaire sera crée. Il est donc préférable de supprimer les profil utilise proprement. Pour supprimé correctement un profile utilisateur il y a 2 méthode. ",
    "url": "/Medaey/supprimer-un-profil-utilisateur-windows",
    
    "relUrl": "/Medaey/supprimer-un-profil-utilisateur-windows"
  },"208": {
    "doc": "supprimer-une-partition-OEM-avec-diskpart",
    "title": "supprimer-une-partition-OEM-avec-diskpart",
    "content": "1) Ouvrir une invitation de commandes en tant qu’administrateur . 2) Lancer Diskpart dans l’invitation de commande . diskpart . 3) Scanner l’ensemble des partitions, volumes, et disques durs avec la commande . rescan . 4) Afficher la liste des disques durs disponibles . list disk . 5) Sélectionnez le disque contenant la partition à supprimer . sel disk 0 . (Cette commande sélectionne les disques 0 changer le chiffre par le disques que vous voulait sélectionner) Attention à ne pas vous tromper de disque. 6) Lister les partitions disponibles sur ce disque dur . list part . 7) Sélectionner la partition OEM . sel part 3 . (Attention au numéro de la partition dans mon cas c’est 3, n’hésitez pas à sauvegarder vos données en cas de doute dans les numéros de disques / partitions.) Attention à ne pas vous tromper de partition. 8) Supprimer la partition sélectionnée . del part override .   . 9) Vérifier que la partition a bien était supprimée . list part . (Petite astuce vous pouvait rappeler les dernières commandes en appuyer sur la flèche du haut⬆️ de votre clavier.) . tech2tech.fr . ",
    "url": "/Medaey/supprimer-une-partition-OEM-avec-diskpart",
    
    "relUrl": "/Medaey/supprimer-une-partition-OEM-avec-diskpart"
  },"209": {
    "doc": "the-chown-command-across-linux-distributions",
    "title": "The Basics of chown",
    "content": "The basic syntax of the chown command is: . chown [OPTION]... [OWNER][:[GROUP]] FILE... Here, OWNER can be a user name or numeric user ID, and GROUP can be a group name or numeric group ID. FILE is the name of the file or directory that you want to change the ownership of. ",
    "url": "/Lucian/the-chown-command-across-linux-distributions#the-basics-of-chown",
    
    "relUrl": "/Lucian/the-chown-command-across-linux-distributions#the-basics-of-chown"
  },"210": {
    "doc": "the-chown-command-across-linux-distributions",
    "title": "Commonly Used Options",
    "content": "Below are some of the most commonly used options with chown: . | -R or --recursive: Changes files and directories recursively | --no-dereference: Operates on symbolic links directly, rather than dereferencing them | --preserve-root: Refuses to operate recursively on / (root) | . ",
    "url": "/Lucian/the-chown-command-across-linux-distributions#commonly-used-options",
    
    "relUrl": "/Lucian/the-chown-command-across-linux-distributions#commonly-used-options"
  },"211": {
    "doc": "the-chown-command-across-linux-distributions",
    "title": "Practical Examples",
    "content": "Changing the Owner of a File . To change the owner of a file, you use chown with the new owner’s username followed by the file name. For instance, to change the owner of a file named file1.txt to a user named bob, you would use the following command: . sudo chown bob file1.txt . Changing the Group of a File . The chown command also allows you to change the group of a file. To do this, you use chown with a colon followed by the new group name and the file name. For example, to change the group of file1.txt to developers, you would use the following command: . sudo chown :developers file1.txt . Changing Both the Owner and Group of a File . You can change both the owner and the group of a file in a single command by separating the new owner and group with a colon. Here’s how you could change the owner of file1.txt to bob and the group to developers: . sudo chown bob:developers file1.txt . Changing Ownership Recursively . If you want to change the ownership of a directory and all the files and directories within it, you use the -R (or --recursive) option. Here’s how you could change the owner of a directory named dir1 and its contents to bob: . sudo chown -R bob dir1 . ",
    "url": "/Lucian/the-chown-command-across-linux-distributions#practical-examples",
    
    "relUrl": "/Lucian/the-chown-command-across-linux-distributions#practical-examples"
  },"212": {
    "doc": "the-chown-command-across-linux-distributions",
    "title": "Conclusion",
    "content": "The chown command is a powerful tool for managing file and directory ownership in Linux. Whether you’re a system administrator managing user access or a developer navigating a Linux environment, mastering chown is a must. While this article provides a good starting point, the man chown command offers more in-depth information about chown and its options. Remember, with great power comes great responsibility. Changing file and directory ownership can have significant implications, especially in multi-user environments. Always double-check your commands before pressing enter. ",
    "url": "/Lucian/the-chown-command-across-linux-distributions#conclusion",
    
    "relUrl": "/Lucian/the-chown-command-across-linux-distributions#conclusion"
  },"213": {
    "doc": "the-chown-command-across-linux-distributions",
    "title": "the-chown-command-across-linux-distributions",
    "content": "The chown command, an abbreviation of “change owner”, is a fundamental utility in the Linux toolkit. It’s used to change the owner and group of files and directories. This article provides a comprehensive deep-dive into the chown command, covering its syntax, options, and practical examples to help you navigate file and directory ownership in Linux like a pro. ",
    "url": "/Lucian/the-chown-command-across-linux-distributions",
    
    "relUrl": "/Lucian/the-chown-command-across-linux-distributions"
  },"214": {
    "doc": "the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    "title": "What is iptables?",
    "content": "iptables is a command-line utility in Linux that allows for the configuration of the netfilter firewall, which is built into the Linux kernel. It provides a powerful and flexible framework for filtering network traffic, controlling network connections, and performing network address translation (NAT). With iptables, you have fine-grained control over which packets are allowed or blocked based on various criteria such as source/destination IP addresses, port numbers, packet protocols, and more. ",
    "url": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#what-is-iptables",
    
    "relUrl": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#what-is-iptables"
  },"215": {
    "doc": "the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    "title": "iptables Concepts and Terminology",
    "content": "Before diving into iptables configuration, it’s important to understand some key concepts and terminology: . | Chains: iptables uses chains to organize rules. A chain is a sequence of rules that packets traverse. There are three built-in chains: INPUT (for incoming packets), OUTPUT (for outgoing packets), and FORWARD (for packets being routed through the system). | Tables: iptables uses tables to categorize different types of rules. The most commonly used tables are filter (for packet filtering), nat (for network address translation), and mangle (for specialized packet alteration). | Rules: Rules are the heart of iptables. Each rule defines a condition and an action. When a packet matches the conditions specified in a rule, the associated action is taken, which can be accepting, dropping, or modifying the packet. | Targets: Targets are the actions performed on packets that match a rule. Common targets include ACCEPT (allow the packet), DROP (discard the packet), REJECT (discard the packet and send an error message back), and LOG (log information about the packet). | Matches: Matches are conditions that a packet must meet to be considered a match for a rule. Matches can be based on source/destination IP addresses, port numbers, packet protocols, and other packet attributes. | . ",
    "url": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#iptables-concepts-and-terminology",
    
    "relUrl": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#iptables-concepts-and-terminology"
  },"216": {
    "doc": "the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    "title": "iptables Configuration",
    "content": "To configure iptables, you need to define rules that match specific packets and specify the action to be taken for those packets. Here’s a step-by-step process to get started with iptables configuration: . | Understanding Default Policies: Before adding rules, determine the default policies for each chain. Default policies define what happens to packets that do not match any rules. You can set default policies to ACCEPT, DROP, or REJECT. Example: . iptables -P INPUT DROP iptables -P OUTPUT ACCEPT iptables -P FORWARD DROP . | Creating and Modifying Rules: Use the iptables command to create and modify rules. Start with simple rules and gradually build a comprehensive set of rules to meet your specific network security requirements. Remember to consider both inbound and outbound traffic. Example: . iptables -A INPUT -p tcp --dport 22 -j ACCEPT iptables -A INPUT -s 192.168.0.0/24 -j DROP . | Defining Match Criteria: Specify the match criteria for each rule using options such as -s (source address), -d (destination address), -p (protocol), -i (input interface), -o (output interface), and more. Combine multiple match criteria to create complex rules. Example: . iptables -A INPUT -s 192.168.0.0/24 -p tcp --dport 80 -j ACCEPT iptables -A INPUT -i eth0 -p udp --dport 53 -j ACCEPT . | Setting the Action: Set the action for each rule using options such as -j (jump to a target), -p (protocol-specific options), -m (extension modules), and more. Choose an appropriate target based on your desired firewall behavior. Example: . iptables -A INPUT -p tcp --dport 22 -j ACCEPT iptables -A INPUT -p icmp -j DROP . | Testing and Saving Rules: After defining rules, test them to ensure they function as expected. You can use tools like ping, curl, or telnet to simulate different network scenarios. Once satisfied, save your iptables configuration so that it persists across reboots. Example: . iptables-save &gt; /etc/iptables/rules.v4 iptables-save &gt; /etc/iptables/rules.v6 . | Managing Rule Order: Rule order matters in iptables. Rules are processed in a sequential manner, and the first matching rule determines the action taken on a packet. Pay attention to rule order and use the iptables -L --line-numbers command to view and modify rule positions. Example: . iptables -L --line-numbers iptables -D INPUT 3 iptables -I INPUT 3 -p tcp --dport 443 -j ACCEPT . | . ",
    "url": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#iptables-configuration",
    
    "relUrl": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#iptables-configuration"
  },"217": {
    "doc": "the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    "title": "Advanced iptables Features",
    "content": "iptables offers a wide range of advanced features to enhance your network firewall configuration. Here are a few notable features to explore: . | Network Address Translation (NAT): iptables provides NAT capabilities for masquerading, port forwarding, and load balancing. These features are particularly useful for setting up network services and managing network traffic. Example: . iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to-destination 192.168.0.10:80 . | Connection Tracking: iptables can track the state of network connections and apply rules based on the connection’s state. This allows for the creation of more dynamic and sophisticated firewall configurations. Example: . iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT . | Packet Filtering Extensions: iptables supports extensions like conntrack, limit, recent, and hashlimit to add additional filtering capabilities. These extensions enable more granular control over packet filtering and traffic management. Example: . iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -m recent --name SSH --set iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -m recent --name SSH --rcheck --seconds 60 --hitcount 4 -j DROP . | . | iptables -L: List all the current firewall rules. | iptables -F: Flush (delete) all the rules from all chains. | iptables -A CHAIN -p PROTOCOL –dport PORT -j ACCEPT: Allow incoming traffic to a specific port and protocol. | iptables -A CHAIN -s SOURCE_IP_ADDRESS -j DROP: Block incoming traffic from a specific IP address. | iptables -A CHAIN -m conntrack –ctstate ESTABLISHED,RELATED -j ACCEPT: Allow incoming traffic that is related to an established connection. | iptables -A CHAIN -p tcp –dport PORT -m limit –limit BURST/HOUR -j ACCEPT: Limit incoming traffic to a specific port using a burst and hourly rate limit. | iptables -A CHAIN -p tcp –syn -m connlimit –connlimit-above LIMIT -j REJECT: Reject incoming TCP traffic if the number of concurrent connections exceeds a limit. | iptables -A CHAIN -p PROTOCOL -m recent –update –seconds SECONDS –name LISTNAME -j DROP: Block incoming traffic from an IP address if it has made recent connections within a specified time. | iptables -t nat -A PREROUTING -p PROTOCOL –dport PORT -j DNAT –to-destination DESTINATION_IP:DESTINATION_PORT: Perform destination NAT (DNAT) to redirect incoming traffic to a different IP address and port. | iptables -t nat -A POSTROUTING -s SOURCE_NETWORK -j SNAT –to-source DESTINATION_IP: Perform source NAT (SNAT) to change the source IP address of outgoing traffic from a specific network. | . ",
    "url": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#advanced-iptables-features",
    
    "relUrl": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#advanced-iptables-features"
  },"218": {
    "doc": "the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    "title": "Conclusion",
    "content": "iptables is a powerful tool for configuring and managing network firewalls in Linux-based systems. By understanding iptables concepts, terminology, and configuration options, you can build a robust firewall that protects your network and ensures secure communication. With advanced features like NAT, connection tracking, and packet filtering extensions, iptables offers immense flexibility for customizing your firewall configuration. Remember to thoroughly test and validate your iptables rules before deploying them in a production environment. Additionally, consult the iptables documentation and online resources to further explore the capabilities of this versatile firewall tool. Mastering iptables empowers you with the knowledge and skills to safeguard your network and maintain control over your network traffic. Start exploring the possibilities of iptables today and take your network security to the next level! . ",
    "url": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#conclusion",
    
    "relUrl": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration#conclusion"
  },"219": {
    "doc": "the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    "title": "the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    "content": "Firewalls play a critical role in securing computer networks by filtering incoming and outgoing network traffic. Among the many firewall options available, iptables stands out as a powerful and flexible choice for Linux-based systems. In this expert guide, we will delve into the intricacies of iptables and provide you with the knowledge to configure and manage a robust network firewall. ",
    "url": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration",
    
    "relUrl": "/Lucian/the-expert-guide-to-iptables-mastering-network-firewall-configuration"
  },"220": {
    "doc": "the-first-raspberry-pi-a-tiny-revolution-in-computing",
    "title": "Raspberry Pi 1 Model B: Specifications",
    "content": "The Raspberry Pi 1 Model B was powered by a 700MHz ARM11 processor and was equipped with 256MB of RAM. While these specifications might seem modest in comparison to contemporary standards, they were more than sufficient to run a range of tasks and even some lightweight operating systems like Raspbian, a Debian-based OS specially designed for the Raspberry Pi. The Model B featured two USB ports for peripherals like a mouse and a keyboard, an Ethernet port for internet connectivity, an SD card slot for storage, and a HDMI port to connect it to a monitor or a TV. These features, combined with its low price of around $35, made it a remarkably accessible tool for computer science education. ",
    "url": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing#raspberry-pi-1-model-b-specifications",
    
    "relUrl": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing#raspberry-pi-1-model-b-specifications"
  },"221": {
    "doc": "the-first-raspberry-pi-a-tiny-revolution-in-computing",
    "title": "Impact on Education and Beyond",
    "content": "The Raspberry Pi Foundation’s primary aim was to make computing more accessible to students, to help them learn programming skills, and to understand the hardware aspects of computing devices. The Raspberry Pi 1 Model B, with its low cost and flexibility, made this possible in ways that traditional computer science education did not. But the reach of the Raspberry Pi extended beyond the classroom. Its size and cost-effectiveness made it an attractive option for hobbyists and tinkerers. The Raspberry Pi could be used to power home automation projects, serve as a local media server, control robotic devices, and more. It wasn’t long before an active community of Raspberry Pi enthusiasts sprang up, sharing project ideas, troubleshooting tips, and software hacks. ",
    "url": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing#impact-on-education-and-beyond",
    
    "relUrl": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing#impact-on-education-and-beyond"
  },"222": {
    "doc": "the-first-raspberry-pi-a-tiny-revolution-in-computing",
    "title": "The Legacy of the Raspberry Pi",
    "content": "In the years since the release of the Raspberry Pi 1 Model B, the Raspberry Pi Foundation has continued to refine and develop new models, each offering improved specifications and new features. Yet the original model set the blueprint for the future of Raspberry Pi: a focus on accessibility, versatility, and fostering a spirit of learning and creativity in computing. From its humble beginnings, the Raspberry Pi has grown to become a symbol of the democratization of technology. It has made computing more approachable and fun for people of all ages, all around the world. And all of this started with the first Raspberry Pi back in 2012, a tiny piece of tech that brought about a massive change in the world of computing. ",
    "url": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing#the-legacy-of-the-raspberry-pi",
    
    "relUrl": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing#the-legacy-of-the-raspberry-pi"
  },"223": {
    "doc": "the-first-raspberry-pi-a-tiny-revolution-in-computing",
    "title": "the-first-raspberry-pi-a-tiny-revolution-in-computing",
    "content": "Back in February 2012, a credit card-sized piece of technology shook up the world of computing. The Raspberry Pi, a small, low-cost and highly adaptable computer, was launched with the intention of promoting computer science education in schools. Its ease of use, flexibility, and low price point made it a hit, not just among students and educators, but also among hobbyists, tech tinkerers, and professional engineers. The first model to be released was the Raspberry Pi 1 Model B. This compact computer was designed by the UK-based Raspberry Pi Foundation, a non-profit organization dedicated to improving computer education worldwide. Little did they know that this initial offering would spark a revolution in low-cost computing and inspire countless creative technological projects. ",
    "url": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing",
    
    "relUrl": "/Lucian/the-first-raspberry-pi-a-tiny-revolution-in-computing"
  },"224": {
    "doc": "ubuntu-comment-obtenir-une-liste-de-tous-les-services-au-démarrage",
    "title": "ubuntu-comment-obtenir-une-liste-de-tous-les-services-au-démarrage",
    "content": "initctl list . + = En cours d’exécution, - = Arrêté. ? = géré par upstart . Commande utile. | initctl list | egrep -v “ stop/waiting | ^tty” ; service –status-all 2&gt;&amp;1 | egrep -v “\\[ (\\? | -) \\]” | . ",
    "url": "/Lucian/ubuntu-comment-obtenir-une-liste-de-tous-les-services-au-d%C3%A9marrage",
    
    "relUrl": "/Lucian/ubuntu-comment-obtenir-une-liste-de-tous-les-services-au-démarrage"
  },"225": {
    "doc": "utiliser-le-bureau-à-distance-raspberry-avec-windows",
    "title": "1. Installer xrdp &amp; tighvncserver",
    "content": "1) Mettre à jour les dépôts &amp; paquets . sudo apt-get update &amp;&amp; sudo apt-get upgrade -y . 2) Installer les paquets xrdp &amp; tightvncserver . sudo apt-get install xrdp tightvncserver . 3) Ouvrir le port RDP . ufw allow 3389/tcp . ",
    "url": "/Medaey/utiliser-le-bureau-%C3%A0-distance-raspberry-avec-windows#1-installer-xrdp--tighvncserver",
    
    "relUrl": "/Medaey/utiliser-le-bureau-à-distance-raspberry-avec-windows#1-installer-xrdp--tighvncserver"
  },"226": {
    "doc": "utiliser-le-bureau-à-distance-raspberry-avec-windows",
    "title": "2. Connexion depuis le PC Windows",
    "content": "Sur tous les PC Windows, l’outil “Connexion Bureau à distance” est installé de basse sur l’ordinateur.  Choisir Xvnc. L’accès au bureau à distance devrait donner ceci.  . S’il y a des latences avec l’interface graphique, il faut réduire la résolution d’affichage. N’oubliez pas que le GPU du RaspberryPi est un Broadcom VideoCore IV, ne lui en demander pas trop ;) . raspberry-lab.fr . ",
    "url": "/Medaey/utiliser-le-bureau-%C3%A0-distance-raspberry-avec-windows#2-connexion-depuis-le-pc-windows",
    
    "relUrl": "/Medaey/utiliser-le-bureau-à-distance-raspberry-avec-windows#2-connexion-depuis-le-pc-windows"
  },"227": {
    "doc": "utiliser-le-bureau-à-distance-raspberry-avec-windows",
    "title": "utiliser-le-bureau-à-distance-raspberry-avec-windows",
    "content": "Hello on va utiliser l’outil mstsc (protocole RDP) pour se connecter au bureau distant d’un Raspberry pi. ",
    "url": "/Medaey/utiliser-le-bureau-%C3%A0-distance-raspberry-avec-windows",
    
    "relUrl": "/Medaey/utiliser-le-bureau-à-distance-raspberry-avec-windows"
  },"228": {
    "doc": "vérifier-si-une-machine-est-vulnérable-à-spectre-et-meltdown",
    "title": " 1. Sous Windows 10",
    "content": "1) Lancez Powershell en mode administrateur et tapez les commandes suivantes : . Install-Module SpeculationControl . Set-ExecutionPolicy RemoteSigned . Import-Module SpeculationControl . Get-SpeculationControlSettings . (Si il y a du rouge la machine est vulnérable –‘) . 2) On remet les paramètres de sécurité par défaut une fois le résultat obtenu: . Set-ExecutionPolicy Default . exemple de machine vulnérable Windows: . ",
    "url": "/Medaey/v%C3%A9rifier-si-une-machine-est-vuln%C3%A9rable-%C3%A0-spectre-et-meltdown#1-sous-windows-10",
    
    "relUrl": "/Medaey/vérifier-si-une-machine-est-vulnérable-à-spectre-et-meltdown#1-sous-windows-10"
  },"229": {
    "doc": "vérifier-si-une-machine-est-vulnérable-à-spectre-et-meltdown",
    "title": "2. sous Linux",
    "content": "wget https://raw.githubusercontent.com/speed47/spectre-meltdown-checker/master/spectre-meltdown-checker.sh . sudo sh spectre-meltdown-checker.sh . exemple: Ci dessous une machine vulnérable. Les seuls conseils à l’heure actuelle et de faire les mise à jour du BIOS, système d’exploitation et application. spectreattack.com  microsoft.com  github.com . ",
    "url": "/Medaey/v%C3%A9rifier-si-une-machine-est-vuln%C3%A9rable-%C3%A0-spectre-et-meltdown#2-sous-linux",
    
    "relUrl": "/Medaey/vérifier-si-une-machine-est-vulnérable-à-spectre-et-meltdown#2-sous-linux"
  },"230": {
    "doc": "vérifier-si-une-machine-est-vulnérable-à-spectre-et-meltdown",
    "title": "vérifier-si-une-machine-est-vulnérable-à-spectre-et-meltdown",
    "content": "Salutation dans cet article nous allons voir comment vérifier si vos machines sont vulnérables aux failles de sécurité spectre &amp; Meltdown. (Pour plus d’informations sur c’est 2 failles consultées les liens en bas de l’article)  . ",
    "url": "/Medaey/v%C3%A9rifier-si-une-machine-est-vuln%C3%A9rable-%C3%A0-spectre-et-meltdown",
    
    "relUrl": "/Medaey/vérifier-si-une-machine-est-vulnérable-à-spectre-et-meltdown"
  },"231": {
    "doc": "what-is-data",
    "title": "what-is-data",
    "content": "What is data? At its most basic, data is information. It’s a record of the world around us, captured in a format that can be stored, analyzed, and shared. Data can be qualitative or quantitative. Qualitative data describes qualities or characteristics, such as the color of a car or the mood of a song. Quantitative data, on the other hand, is numerical. It measures quantities or amounts, like the number of miles driven or the temperature of a room. In this post, we’ll delve into the different types of data and how they are used. ",
    "url": "/Lucian/what-is-data",
    
    "relUrl": "/Lucian/what-is-data"
  },"232": {
    "doc": "zabbix",
    "title": "Présentation",
    "content": "ZABBIX est un logiciel libre permettant de surveiller l’état de divers services réseau, serveurs et autres matériels réseau et produisant des graphiques dynamiques de consommation des ressources. ⏩ Pas le temps ? Fait un copier-coller du texte ci-dessous et le serveur zabbix est installé. cd /tmp/ &amp;&amp; wget https://repo.zabbix.com/zabbix/6.0/debian/pool/main/z/zabbix-release/zabbix-release_6.0-1+debian11_all.deb sudo dpkg -i zabbix-release_6.0-1+debian11_all.deb &amp;&amp; sudo apt update -y sudo apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent mariadb-server mariadb-client -y sudo mysql -u \"root\" -Bse \"CREATE DATABASE zabbix character set utf8mb4 collate utf8mb4_bin; CREATE USER zabbix@localhost IDENTIFIED BY 'zabbix'; GRANT ALL PRIVILEGES ON zabbix.* TO zabbix@localhost; FLUSH PRIVILEGES;\" sudo zcat /usr/share/doc/zabbix-sql-scripts/mysql/server.sql.gz | mysql -uzabbix -pzabbix zabbix sudo sed -i 's/\\^*# DBPassword=*/DBPassword=zabbix/g' /etc/zabbix/zabbix_server.conf | grep zabbix sudo systemctl restart zabbix-server zabbix-agent apache2 sudo systemctl enable zabbix-server zabbix-agent apache2 . ",
    "url": "/Medaey/zabbix#pr%C3%A9sentation",
    
    "relUrl": "/Medaey/zabbix#présentation"
  },"233": {
    "doc": "zabbix",
    "title": "Installation",
    "content": "Téléchargement du fichier Debian Software package . cd /tmp/ &amp;&amp; wget https://repo.zabbix.com/zabbix/6.0/debian/pool/main/z/zabbix-release/zabbix-release_6.0-1+debian11_all.deb . Installer le paquet Zabbix est mettre à jour les dépôts. sudo dpkg -i zabbix-release_6.0-1+debian11_all.deb &amp;&amp; sudo apt update -y . Installation les paquets . sudo apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent mariadb-server mariadb-client -y . Création de l’utilisateur et de la base de données zabbix. sudo mysql -u \"root\" -Bse \"CREATE DATABASE zabbix character set utf8mb4 collate utf8mb4_bin; CREATE USER zabbix@localhost IDENTIFIED BY 'zabbix'; GRANT ALL PRIVILEGES ON zabbix.* TO zabbix@localhost; FLUSH PRIVILEGES;\" . Initialisation de la base de données Zabbix à partir du fichier server.sql.gz ⚠️ L’initialisation est longue, il ne faut pas l’arrêter. sudo zcat /usr/share/doc/zabbix-sql-scripts/mysql/server.sql.gz | mysql -uzabbix -pzabbix zabbix . Ajouter le mot de passe mysql dans le fichier de configuration . sudo sed -i 's/\\^*# DBPassword=*/DBPassword=zabbix/g' /etc/zabbix/zabbix_server.conf | grep zabbix . Redémarrez et activez les services Zabbix . sudo systemctl restart zabbix-server zabbix-agent apache2 &amp;&amp; sudo systemctl enable zabbix-server zabbix-agent apache2 . ",
    "url": "/Medaey/zabbix#installation",
    
    "relUrl": "/Medaey/zabbix#installation"
  },"234": {
    "doc": "zabbix",
    "title": "Connexion à la mire WEB",
    "content": "Pour finaliser l’installation il faut se connecter en http sur le serveur avec un navigateur web dans mon cas l’URL est http://192.168.1.26/zabbix. Il reste à suivre les étapes d’installation. À cette étape les identifiants de la base de données sont demandé. Utilisateur : zabbix Mot de passe : zabbix . . Pour la connexion à la mire web les identifiants par défaut sont, . Nom utilisateur : Admin Mot de passe : zabbix . Une fois arrivé sur cette mire web, reste à ajouter les machines à superviser via l’agent Zabbix ou par le protocole SNMP. 📝https://www.zabbix.com/download?zabbix=6.0&amp;os_distribution=debian&amp;os_version=11_bullseye&amp;db=mysql&amp;ws=apache . ",
    "url": "/Medaey/zabbix#connexion-%C3%A0-la-mire-web",
    
    "relUrl": "/Medaey/zabbix#connexion-à-la-mire-web"
  },"235": {
    "doc": "zabbix",
    "title": "zabbix",
    "content": "[TOC] . ",
    "url": "/Medaey/zabbix",
    
    "relUrl": "/Medaey/zabbix"
  }
}
